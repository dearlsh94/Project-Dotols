{"version":3,"sources":["../node_modules/require_optional sync","conf/jwt.ts","utils/ConfigUtil.ts","utils/ComoonUtil.ts","shared/index.ts","conf/mongodb.ts","utils/UserUtil.ts","Test.tsx","components/Header/TopTaps.tsx","elements/Button/MyButton.tsx","pages/User/SignIn.tsx","components/Header/Header.tsx","components/MainCarousel.tsx","pages/Home.tsx","pages/User/SignUp.tsx","pages/User/FindId.tsx","pages/User/FindPw.tsx","components/User/NoSignInUser.tsx","components/User/ViewUserInfo.tsx","components/User/EditUserInfo.tsx","elements/Alert/MyAlert.tsx","components/User/AuthUserInfo.tsx","pages/User/MyInfo.tsx","pages/Board/FreeBoard.tsx","elements/TextEditor/MyTextEditor.tsx","pages/Board/PostWrite.tsx","utils/PostUtil.ts","state/common/SearchValueState.ts","elements/Input/MyInputSearch.tsx","state/Board/TextEditorState.ts","pages/Dictionary/Item.tsx","utils/DictionaryUtil.ts","pages/Dictionary/Raid.tsx","pages/Dictionary/RaidInfo.tsx","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","jwtObject","secret","getSessionNameUserToken","config","sessionUserToken","getBaseUrlForRaidImg","baseUrlForRaidImg","getNowDateString","Date","toLocaleString","MyMongoClient","MongoClient","useNewUrlParser","init","a","connect","SignUpUser","user","mySalt","Math","round","valueOf","random","mail","crypto","createHash","update","password","digest","console","log","getSignInUserId","userToken","getSessionUserToken","getIdFromJWT","JSON","parse","token","checkGameUser","server","character","Promise","reject","axios","post","then","res","catch","setSessionUserToken","signInUser","localStorage","setItem","stringify","getItem","delSessionUserToken","removeItem","payloadToken","split","atob","Test","Fragment","Button","autoFocus","tabIndex","onClick","color","useStyles","makeStyles","theme","menuTabs","margin","menuTab","paddingLeft","spacing","paddingRight","justifyContent","width","textAlign","tabListItem","alignItems","flexShrink","TopTaps","classes","Menus","menus","Array","map","menu","i","push","getMenus","React","useState","isOpen","setIsOpen","isOpenFixed","setIsOpenFixed","_tabsOpen","_tabsClose","_onTabsEnter","_onTabsLeave","_onMoveMenu","url","document","location","href","Box","Grid","container","direction","justify","className","item","key","idx","onMouseEnter","onMouseLeave","List","ListItem","button","Typography","align","variant","display","title","sub","submenu","sm","IconButton","Divider","root","background","props","border","borderRadius","boxShadow","height","paddingTop","paddingBottom","padding","MyButton","other","fullWidth","AdaptingHook","text","form","marginTop","signin","SignIn","setId","setPassword","refId","useRef","refPassword","_onSignIn","length","alert","current","focus","_id","_password","jsonwebtoken","sign","expiresIn","SignInUser","Container","component","maxWidth","noValidate","xs","TextField","required","name","label","autoComplete","value","inputRef","onChange","target","Link","type","onKeyUp","keyCode","toolbar","borderBottom","palette","divider","toolbarleft","toolbarcenter","toolbarTitle","flex","toolbarright","dialogActions","Header","useTheme","fullScreen","useMediaQuery","breakpoints","down","isSignInOpen","setIsSignInOpen","userInfo","_onMoveToMain","_onSignInClose","_onMoveSignUp","Toolbar","size","noWrap","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","marginLeft","marginRight","gridContainer","cardCarousel","maxHeight","position","flexDirection","minWidth","wordWrap","transition","overflow","gridItem","flexBasis","btnMove","verticalAlign","NextArrow","PrevArrow","MainCarousel","settings","dots","arrows","infinite","autoplay","autoplaySpeed","speed","slidesToShow","slidesToScroll","baseUrlForMainCarousel","refCarousel","createRef","images","slickPrev","ref","image","Card","src","alt","slickNext","Home","state","Component","textButton","signup","SignUp","mode","isEdit","isDisabled","passwordConfirm","setPasswordConfirm","setMail","mailAuth","setMailAuth","isAgree","setIsAgree","isSend","setIsSend","isAuth","setIsAuth","_onClickAuthSend","_onClickAuth","disabled","error","helperText","FormControlLabel","control","Checkbox","checked","back","marginBottom","FindId","isSendAuthMail","setIsSendAuthMail","gutterBottom","context","FindPw","isSendPasswordMail","setIsSendPasswordMail","NoSignInUser","ViewUserInfo","grade","point","createDateString","authDateString","EditUserInfo","isConfirm","setIsConfirm","setServer","setCharacter","changePassword","setChangePassword","changePasswordConfirm","setChangePasswordConfirm","_onConfirm","Alert","elevation","MyAlert","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","duration","severity","backdrop","zIndex","drawer","AuthUserInfo","setIsDisabled","openSuccessAlert","setOpenSuccessAlert","openErrorAlert","setOpenErrorAlert","_onAuthRequest","setTimeout","reload","Backdrop","CircularProgress","leftSection","rightSection","MyInfo","userId","CommonUtil","isActive","setMode","MenuList","MenuItem","orientation","flexItem","FreeBoard","modules","clipboard","matchVisual","formats","MyTextEditor","content","this","setState","_onChangeEditor","placeholder","selector","buttonZone","PostWrite","openConfirmCancle","setOpenConfirmCancle","category","setCategory","setTitle","refTitle","Select","labelId","displayEmpty","CreatePost","section","viewCount","writer","creater","editer","lastEditDateString","SearchValueState","atom","default","MyInputSearch","useRecoilState","searchValue","setSearchValue","InputProps","startAdornment","InputAdornment","tabbar","tabs","tab","setValue","useRecoilValue","Tabs","newValue","indicatorColor","textColor","Tab","tempRaidList","limitPower","limitEnter","minPeopleCount","maxPeopleCount","maxEnterCount","reward","img","tempRaidList2","table","searchContainer","tableContainer","shortImage","StyledTableRow","withStyles","createStyles","backgroundColor","TableRow","StyledTableCell","head","common","white","body","fontSize","TableCell","Raid","allRaids","dicRaidList","raidInfos","getDicAllRaidList","raids","TableContainer","Paper","Table","aria-label","TableHead","TableBody","raid","scope","Avatar","concat","RaidInfo","match","params","findKey","resRaid","filter","getDicRaidBykey","App","fixed","exact","path","Item","ReactDOM","render","CssBaseline","getElementById"],"mappings":"w1FAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,2lBCHVC,EAJG,CAChBC,OAAQ,S,SCEGC,EAA0B,WACrC,OAAOC,EAAOC,kBAOHC,EAAuB,WAClC,OAAOF,EAAOG,mBCTHC,EAAmB,WAC9B,OAAO,IAAIC,MAAOC,kB,0BCCdC,EAAgB,I,OAAIC,aCNa,4FDMwB,CAAEC,iBAAiB,IAE5EC,EAAI,uCAAG,sBAAAC,EAAA,sEACLJ,EAAcK,UADT,2CAAH,qDEQGC,EAAa,SAACC,GAGzB,IAAIC,EAASC,KAAKC,OAAO,IAAIZ,MAAOa,UAAYF,KAAKG,UAAa,GAG5DL,EAAKlB,GACHkB,EAAKM,KACDC,IAAOC,WAAW,UAAUC,OAAOT,EAAKU,SAAWT,GAAQU,OAAO,OAI9EC,QAAQC,IAAI,kBFfZjB,IEqBA,OAAO,GA0BIkB,EAAkB,WAC7B,IAAMC,EAAYC,IAClB,OAAmB,OAAdD,EACI,GAGME,EAAaC,KAAKC,MAAMJ,GAAWK,QAgCvCC,EAAgB,SAACC,EAAgBC,GAE5C,OAAO,IAAIC,SAAQ,SAAC7C,EAAS8C,GAC3BC,IAAMC,KAAK,kBACT,CACEJ,UAAWA,EACXD,OAAQA,IAETM,MAAK,SAACC,GACLjB,QAAQC,IAAI,yBAEZlC,EAAQkD,MAETC,OAAM,SAACvD,GACNqC,QAAQC,IAAI,2BAA4BtC,GAExCI,GAAQ,UAOVoD,EAAsB,SAACC,GAC3BC,aAAaC,QACXjD,IACAiC,KAAKiB,UAAUH,KAIbhB,EAAsB,WAC1B,OAAOiB,aAAaG,QAAQnD,MAGxBoD,EAAsB,WAC1BJ,aAAaK,WAAWrD,MASpBgC,EAAe,SAACG,GAEpB,IAGMmB,EAHanB,EAAMoB,MAAM,KAGC,GAKhC,OAFgBtB,KAAKC,MAAMsB,KAAKF,IAEjBzD,ICnJF,SAAS4D,IAUtB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAW,EACXC,QAbU,WACdhD,EAAW,CACTjB,GAAI,SACJ4B,SAAU,QACVJ,KAAM,qBAUJ0C,MAAM,WAJR,6B,uLCDAC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,OAAQ,UAEVC,QAAS,CACPC,YAAaJ,EAAMK,QAAQ,GAC3BC,aAAcN,EAAMK,QAAQ,GAC5BE,eAAgB,eAChBC,MAAO,MACPC,UAAW,UAEbC,YAAa,CACXR,OAAQ,OACRO,UAAW,SACXE,WAAY,SACZC,WAAY,OAID,SAASC,KACtB,IAAMC,EAAUhB,KAEViB,ENtBgB,WACtB,IAAMC,EAAQC,QAMd,OAJAlF,EAAOiF,MAAME,KAAI,SAACC,EAAMC,GACtBJ,EAAMK,KAAKF,MAGNH,EMeqBM,GAHI,EAIJC,IAAMC,UAAS,GAJX,mBAIzBC,EAJyB,KAIjBC,EAJiB,OAKMH,IAAMC,UAAS,GALrB,mBAKzBG,EALyB,KAKZC,EALY,KAO1BC,EAAY,WAChBH,GAAU,IAENI,EAAa,WACjBJ,GAAU,IAGNK,EAAe,SAAC3G,GACpByG,KAEIG,EAAe,SAAC5G,GACpB0G,KAYIG,EAAc,SAACC,GACnBC,SAASC,SAASC,KAAOH,GAG3B,OACE,kBAAC,IAAM1C,SAAP,KACE,kBAAC8C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTnC,QAAS,EACToC,UAAU,MACVC,QAAQ,SACRC,UAAW7B,EAAQb,UAEjBc,EAAMG,KAAI,SAACC,GACT,OACE,kBAACoB,EAAA,EAAD,CACEK,MAAI,EACJC,IAAK1B,EAAK2B,IACVH,UAAW7B,EAAQX,QACnB4C,aAAchB,EACdiB,aAAchB,GACZ,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEL,IAAK1B,EAAK0B,IACVM,QAAM,EACNR,UAAW7B,EAAQJ,YACnBd,QAAS,kBAAOqC,EAAYd,EAAKe,OAC/B,kBAACkB,EAAA,EAAD,CACEC,MAAM,SACNC,QAAQ,YACRC,QAAQ,SACLpC,EAAKqC,SAIX/B,GAAUE,IACTR,EAAKsC,IAAIvC,KAAI,SAACwC,GAAD,OACX,kBAACR,EAAA,EAAD,CACEL,IAAKa,EAAQb,IACbM,QAAM,EACNR,UAAW7B,EAAQJ,YACnBd,QAAS,kBAAOqC,EAAYyB,EAAQxB,OAClC,kBAACkB,EAAA,EAAD,CACEC,MAAM,SACNC,QAAQ,YACRC,QAAQ,SACLG,EAAQF,gBAUnC,kBAACjB,EAAA,EAAD,CACEK,MAAI,EACJe,GAAI,EACJhB,UAAW7B,EAAQX,SAEjBwB,EACE,kBAACiC,EAAA,EAAD,CACEhE,QArES,SAACxE,GACxBwG,GAAe,GACfE,MAoEc,kBAAC,KAAD,OAGF,kBAAC8B,EAAA,EAAD,CACEhE,QA9EQ,SAACxE,GACvBwG,GAAe,GACfC,MA6Ec,kBAAC,IAAD,UAMZ,kBAACgC,EAAA,EAAD,O,kCCnIA/D,GAAYC,YAAW,CAC3B+D,KAAM,CACJC,WAAY,SAACC,GAAD,MACM,QAAhBA,EAAMnE,MACF,mDACA,oDACNoE,OAAQ,EACRC,aAAc,EACdC,UAAW,SAACH,GAAD,MACO,QAAhBA,EAAMnE,MACF,wCACA,wCACNA,MAAO,QACPuE,OAAQ,OACRC,WAAY,EACZC,cAAe,EACfC,QAAS,YAIb,SAASC,GAASR,GACYA,EAApBnE,MAD2D,IACjD4E,EADgD,aACtCT,EADsC,WAE5DlD,EAAUhB,GAAUkE,GAC1B,OAAO,kBAACvE,EAAA,EAAD,eACGiF,WAAS,EACTpB,QAAQ,YACRX,UAAW7B,EAAQgD,MACfW,IAGD,SAASE,GAAaX,GACnC,OACE,kBAAC,IAAMxE,SAAP,KACE,kBAACgF,GACKR,EACDA,EAAMY,OClCjB,IAAM9E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACxC6E,KAAM,CACLC,UAAW,GAEZC,OAAQ,CACPD,UAAW,QAIE,SAASE,KACtB,IAAMlE,EAAUhB,KADe,EAGZyB,IAAMC,SAAS,IAHH,mBAGzB7F,EAHyB,KAGrBsJ,EAHqB,OAIA1D,IAAMC,SAAS,IAJf,mBAIzBjE,EAJyB,KAIf2H,EAJe,KAM1BC,EAAQ5D,IAAM6D,SACdC,EAAc9D,IAAM6D,SAQpBE,EAAY,WACjB,OAAK3J,EAAG4J,OAAS,GAChBC,MAAM,wBACNL,EAAMM,QAAQC,SAEP,GAGHnI,EAASgI,OAAS,GACtBC,MAAM,yBACNH,EAAYI,QAAQC,SAEb,IJVgB,SAACC,EAAaC,GAItC,IAAM3H,EAAQ4H,IAAaC,KACzB,CACEnK,GAAIgK,GAEN/J,EAAUC,OACV,CACEkK,UAAW,OAUfnH,EALgC,CAC9BX,MAAOA,IIHT+H,CAAWrK,QAEXwG,SAASC,SAASC,KAAK,OAGvB,OACE,kBAAC,IAAM7C,SAAP,KACD,kBAACyG,EAAA,EAAD,CACCC,UAAU,OACVC,SAAS,MACR,0BACCC,YAAU,EACVzD,UAAW7B,EAAQ+D,MAClB,kBAACtC,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,GACxB,kBAACkC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACxB,kBAACC,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTxE,OAAO,QACPvE,GAAG,KACH6K,KAAK,KACLC,MAAM,UACNC,aAAa,KACbC,MAAOhL,EACPiL,SAAUzB,EACV0B,SAAU,SAACzL,GAAD,OAAO6J,EAAM7J,EAAE0L,OAAOH,UAElC,kBAACI,GAAA,EAAD,CAAM1E,KAAK,UAAUiB,QAAQ,QAAQ3D,UAAW,GAAhD,oCAID,kBAAC4C,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACxB,kBAACC,GAAA,EAAD,CACChD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTxE,OAAO,QACPsG,KAAK,WACLC,MAAM,WACNO,KAAK,WACLrL,GAAG,WACH+K,aAAa,mBACbC,MAAOpJ,EACPqJ,SAAUvB,EACVwB,SAAU,SAACzL,GAAD,OAAO8J,EAAY9J,EAAE0L,OAAOH,QACtCM,QAAS,SAAC7L,GAlEH,IAkE0BA,EAAE8L,SAjE1C5B,OAmEM,kBAACyB,GAAA,EAAD,CAAM1E,KAAK,UAAUiB,QAAQ,QAAQ3D,UAAW,GAAhD,2CAKF,kBAAC4C,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,GACxB3D,QAAQ,WACRC,UAAW7B,EAAQiE,QAClB,kBAAC,GAAD,CACClF,MAAM,MACN+E,KAAK,qBACLhF,QAAS0F,QC1FnB,IAAMxF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8D,KAAM,GAGNqD,QAAS,CACPC,aAAa,aAAD,OAAepH,EAAMqH,QAAQC,UAE3CC,YAAa,CACX9G,UAAW,QAEb+G,cAAe,CACb/G,UAAW,UAEbgH,aAAc,CACZC,KAAM,GAERC,aAAc,CACZlH,UAAW,SAEbmH,cAAe,CACbrH,eAAgB,qBAIL,SAASsH,KACtB,IAAM/G,EAAUhB,KACVE,EAAQ8H,cACRC,EAAaC,YAAchI,EAAMiI,YAAYC,KAAK,OAHzB,EAIS3G,IAAMC,UAAS,GAJxB,mBAIxB2G,EAJwB,KAIVC,EAJU,KAMzBC,EAAW1K,IACjBF,QAAQC,IAAI2K,GAEZ,IAAMC,EAAgB,WACpBnG,SAASC,SAASC,KAAO,KAOrBkG,EAAiB,WACrBH,GAAgB,IAGZI,EAAgB,WACpBrG,SAASC,SAASC,KAAO,WAS3B,OACE,kBAAC,IAAM7C,SAAP,KACE,kBAAC,IAAMA,SAAP,KACE,6BACE,kBAACiJ,EAAA,EAAD,CACE9F,UAAW7B,EAAQqG,SACnB,kBAAC5E,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQyG,aACnB,kBAAC9H,EAAA,EAAD,CACEiJ,KAAK,SADP,cAKF,kBAACnG,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAACjD,EAAA,EAAD,CACE8C,UAAU,KACV5C,QAAQ,KACRzD,MAAM,UACNwD,MAAM,SACNsF,QAAM,EACNhG,UAAW7B,EAAQ2G,aACnB7H,QAAS0I,GAPX,SAYF,kBAAC/F,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQ6G,cAEF,KAAbU,EACE,kBAACpC,EAAA,EAAD,KACE,kBAACxG,EAAA,EAAD,CACE6D,QAAQ,WACRoF,KAAK,QACL9I,QArDF,WACpBwI,GAAgB,KAiDI,UAMA,kBAAC3I,EAAA,EAAD,CACE6D,QAAQ,WACRoF,KAAK,QACL9I,QAAS4I,GAHX,WASF,kBAAC/I,EAAA,EAAD,CACE6D,QAAQ,WACRoF,KAAK,QACL9I,QAxDA,WLuBtBV,IKpBEoJ,MAkDkB,cAWd,+BACE,kBAAChG,EAAA,EAAD,KACE,kBAACzB,GAAD,SAIN,kBAAC+H,EAAA,EAAD,CACEb,WAAYA,EACZc,KAAMV,EACNW,QAASP,EACTQ,kBAAgB,2BACd,kBAACC,EAAA,EAAD,CACErN,GAAG,2BACA,sBAEL,kBAACsN,EAAA,EAAD,KAME,kBAACjE,GAAD,OAEF,kBAACkE,EAAA,EAAD,CACEvG,UAAW7B,EAAQ8G,eACnB,kBAACnI,EAAA,EAAD,CACEC,WAAS,EACTC,UAAW,EACXC,QAAS4I,EACT3I,MAAM,WAJR,4BAOA,kBAACJ,EAAA,EAAD,CACEC,WAAS,EACTC,UAAW,EACXC,QAAS2I,EACT1I,MAAM,WAJR,mB,qHCxJNC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwC,UAAW,CACT+B,QAAS,MACT/D,MAAO,OACP4D,OAAQ,OACR+E,WAAY,kBACZC,YAAa,mBAEfC,cAAe,CACbvE,UAAW,OACXsE,YAAa,QACbD,WAAY,QACZ3I,MAAO,QAET8I,aAAc,CACZrF,OAAQ,IACRC,aAAc,MACdrE,MAAO,sBACPkE,WAAY,OACZvD,MAAO,OACP+I,UAAW,QACXpF,UACE,sGACFqF,SAAU,WACVjG,QAAS,OACTkG,cAAe,SACfC,SAAU,IACVC,SAAU,aACVC,WAAY,mBACZC,SAAU,UAEZC,SAAU,CACRN,SAAU,WACVhJ,MAAO,OACPuJ,UAAW,QAEbC,QAAS,CACP9J,OAAQ,OACRO,UAAW,SACXE,WAAY,SACZsJ,cAAe,cAInB,SAASC,GAAUlG,GAAa,IACtBpE,EAAYoE,EAAZpE,QACR,OACE,kBAACgE,EAAA,EAAD,CACEhE,QAASA,GACP,kBAAC,KAAD,OAKR,SAASuK,GAAUnG,GAAa,IACtBpE,EAAYoE,EAAZpE,QACR,OACE,kBAACgE,EAAA,EAAD,CACEhE,QAASA,GACP,kBAAC,KAAD,OAKO,SAASwK,KACtB,IAAMtJ,EAAUhB,KACVuK,EAAW,CACfC,MAAM,EACNC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,cAAe,IACfC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBX,UAAW,kBAACA,GAAD,MACXC,UAAW,kBAACA,GAAD,OAGPW,EVlFC/O,EAAO+O,uBUqFRC,EAAyCxJ,IAAMyJ,YAE/CC,EAAS,GAKf,OAJAA,EAAO5J,KAAK,WACZ4J,EAAO5J,KAAK,WACZ4J,EAAO5J,KAAK,WAGV,kBAAC4E,EAAA,EAAD,CACEtD,UAAW7B,EAAQ0B,WACnB,kBAACD,EAAA,EAAD,CAAMC,WAAS,EAACG,UAAW7B,EAAQuI,eACjC,kBAAC9G,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EAAG1D,UAAW7B,EAAQkJ,SACnC,kBAACpG,EAAA,EAAD,CACEhE,QAAS,kCAAMmL,EAAYtF,eAAlB,aAAM,EAAqByF,cAClC,kBAAC,KAAD,QAGN,kBAAC3I,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAI1D,UAAW7B,EAAQgJ,UAClC,kBAAC,KAAD,eAAUqB,IAAKJ,GACTV,GAEFY,EAAO/J,KAAI,SAACkK,EAAOhK,GAAR,OACT,kBAACiK,GAAA,EAAD,CAAM1I,UAAW7B,EAAQwI,aAAczG,IAAKuI,GACxC,yBAAKE,IAAKR,EAAyBM,EAAOG,IAAK,SAAWnK,EAAGuB,UAAU,sBAMrF,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EAAG1D,UAAW7B,EAAQkJ,SACnC,kBAACpG,EAAA,EAAD,CACEhE,QAAS,kCAAMmL,EAAYtF,eAAlB,aAAM,EAAqB+F,cAClC,kBAAC,KAAD,U,IC/FCC,G,oDAjBd,WAAYzH,GAAgB,IAAD,+BAC1B,cAAMA,IAED0H,MAAQ,CACZvK,KAAM,SAJmB,E,sDAS1B,OACC,6BACC,kBAACiJ,GAAD,W,GAbeuB,a,oBCMb7L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACxCwD,MAAO,CACNsB,UAAW,GACXrE,UAAW,UAEZoE,KAAM,CACLC,UAAW,IAEZ8G,WAAY,CACXjL,WAAY,UAEbkL,OAAQ,CACP/G,UAAW,QAgBE,SAASgH,GAAO9H,GAC9B,IAAMlD,EAAUhB,KAD6B,EAGjByB,IAAMC,SAAwB,SAAfwC,EAAM+H,MAHJ,mBAGtCC,EAHsC,aAITzK,IAAMC,SAASwK,IAJN,mBAItCC,EAJsC,aAKzB1K,IAAMC,SAAS,KALU,mBAKtC7F,EALsC,KAKlCsJ,EALkC,OAMb1D,IAAMC,SAAS,IANF,mBAMtCjE,EANsC,KAM5B2H,EAN4B,OAOC3D,IAAMC,SAAS,IAPhB,mBAOtC0K,EAPsC,KAOrBC,EAPqB,OAQrB5K,IAAMC,SAAS,IARM,mBAQtCrE,EARsC,KAQhCiP,EARgC,OASb7K,IAAMC,SAAS,IATF,mBAStC6K,EATsC,KAS5BC,EAT4B,OAUf/K,IAAMC,UAAS,GAVA,mBAUtC+K,EAVsC,KAU7BC,EAV6B,OAYjBjL,IAAMC,UAAS,GAZE,mBAYtCiL,EAZsC,KAY9BC,EAZ8B,OAajBnL,IAAMC,UAAS,GAbE,mBAatCmL,EAbsC,KAa9BC,EAb8B,KAoBvCC,EAAmB,WACxB,GAAItP,IAAa2O,EAEhB,OADA1G,MAAM,uEACC,EAGRkH,GAAU,IAQLI,EAAe,WACpBF,GAAU,IAwBV,OACE,kBAAC,IAAMpN,SAAP,KACD,kBAACyG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACpC,kBAAC/C,EAAA,EAAD,CACCT,UAAW7B,EAAQ0C,MACnB0C,UAAU,KACV5C,QAAQ,OAEL0I,GACA,YAIDS,GACA,kBAAC,IAAMjN,SAAP,KACC,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,GACxB,kBAACkC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACd,kBAACC,GAAA,EAAD,CACCyG,SAAUd,EACV3I,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACL/M,GAAG,KACH6K,KAAK,KACLC,MAAM,UACNC,aAAa,KACbC,MAAOhL,EACPkL,SAAU,SAACzL,GAAD,OAAQ6J,EAAM7J,EAAE0L,OAAOH,WAGnC,kBAACpE,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACd,kBAACC,GAAA,EAAD,CACChD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,WACLC,MAAM,WACN9K,GAAG,WACHqL,KAAK,WACLN,aAAa,mBACbC,MAAOpJ,EACPsJ,SAAU,SAACzL,GAAD,OAAQ8J,EAAY9J,EAAE0L,OAAOH,WAGzC,kBAACpE,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACd,kBAACC,GAAA,EAAD,CACC0G,MAA6B,KAApBd,GAA4B3O,IAAa2O,EAClDe,WAAiC,KAApBf,GAA4B3O,IAAa2O,EAAmB,oFAAqB,GAC9F5I,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,kBACLC,MAAM,mBACN9K,GAAG,kBACHqL,KAAK,WACLL,MAAOuF,EACPrF,SAAU,SAACzL,GAAD,OAAQ+Q,EAAmB/Q,EAAE0L,OAAOH,WAGhD,kBAACpE,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACd,kBAACC,GAAA,EAAD,CACChD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,OACLC,MAAM,gBACN9K,GAAG,OACHgL,MAAOxJ,EACP0J,SAAU,SAACzL,GAAD,OAAQgR,EAAQhR,EAAE0L,OAAOH,QACnCM,QAAS,SAAC7L,GApHJ,IAoHuBA,EAAE8L,SAnHvC2F,QAsHM,kBAACtK,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACd,kBAAC5G,EAAA,EAAD,CACCiF,WAAS,EACTpB,QAAQ,YACRzD,MAAM,UACN8C,UAAW7B,EAAQ8K,WACnBhM,QAASiN,GALV,+BAaHJ,IAAWE,GACX,kBAAC,IAAMnN,SAAP,KACC,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,GACxB,kBAACkC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACd,kBAACC,GAAA,EAAD,CACChD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,WACLC,MAAM,sBACN9K,GAAG,WACHgL,MAAO0F,EACPxF,SAAU,SAACzL,GAAD,OAAQkR,EAAYlR,EAAE0L,OAAOH,QACvCM,QAAS,SAAC7L,GArIJ,IAqI2BA,EAAE8L,SApI3C4F,QAuIM,kBAACvK,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACd,kBAAC5G,EAAA,EAAD,CACCiF,WAAS,EACTpB,QAAQ,YACRzD,MAAM,UACN8C,UAAW7B,EAAQ8K,WACnBhM,QAASkN,GALV,+BAaHL,GAAUE,GACV,kBAAC,IAAMnN,SAAP,KACC,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,GACxB,kBAACkC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IAEZsG,GACA,kBAACpK,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACd,kBAACjD,EAAA,EAAD,+CAKH,kBAAC8J,GAAA,EAAD,CACCC,QACC,kBAACC,GAAA,EAAD,CACCzG,MAAM,mBACN9G,MAAM,UACNwN,QAASd,EACT1F,SAAW,WAAO2F,GAAYD,MAEhC9F,MAAM,wFAGR,kBAAClE,EAAA,EAAD,CACCC,WAAS,EACTE,QAAQ,WACRC,UAAW7B,EAAQ+K,QAClB,kBAAC,GAAD,CACChM,MAAM,OACN+E,KAAK,UACLhF,QA5KY,WACtB,IAAK2M,EAEJ,OADA/G,MAAM,mEACC,EASH5I,EAN2B,CAC/BjB,GAAIA,EACJ4B,SAAUA,EACVJ,KAAMA,IAINqI,MAAM,0CAGNA,MAAO,kDC1FV,IAAM1F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,MAAO,CACLa,WAAY,GACZnE,OAAQ,OACRO,UAAW,SACXE,WAAY,SACZJ,eAAgB,eAElBsE,KAAM,CACJC,UAAW,IAEbwI,KAAM,CACJ3M,WAAY,aACZ4M,aAAc,IAEjB1B,OAAQ,CACP/G,UAAW,QAIE,SAAS0I,KACtB,IAAM1M,EAAUhB,KADe,EAGPyB,IAAMC,SAAS,IAHR,mBAGxBrE,EAHwB,KAGlBiP,EAHkB,OAIC7K,IAAMC,SAAS,IAJhB,mBAIxB6K,EAJwB,KAIdC,EAJc,OAMa/K,IAAMC,UAAS,GAN5B,mBAMxBiM,EANwB,KAMRC,EANQ,KAgB/B,OACE,kBAAC,IAAMlO,SAAP,KACD,kBAACyG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MAChC,kBAAC/C,EAAA,EAAD,CACEE,QAAQ,KAAKqK,cAAY,EACzBhL,UAAW7B,EAAQ0C,OAFrB,mCAKE,0BACE4C,YAAU,EACVzD,UAAW7B,EAAQ+D,MACnB,kBAACtC,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,GACvB,kBAACkC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IAErBoH,EACE,kBAAClL,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAACU,GAAA,EAAD,CACEb,UAAU,SACVvD,UAAW7B,EAAQwM,KACnB1N,QAvBI,WACxB8N,GAAkB,KAmBA,gBAMA,kBAACpH,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTxE,OAAO,QACPvE,GAAG,OACH6K,KAAK,OACLC,MAAM,2BACNE,MAAO0F,EACPxF,SAAU,SAACzL,GAAOkR,EAAYlR,EAAE0L,OAAOH,WAI3C,kBAACL,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTxE,OAAO,QACPvE,GAAG,OACH6K,KAAK,OACLC,MAAM,2BACNC,aAAa,OACbC,MAAOxJ,EACP0J,SAAU,SAACzL,GAAOgR,EAAQhR,EAAE0L,OAAOH,WAI3C,kBAACpE,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb3D,QAAQ,WACRC,UAAW7B,EAAQ+K,QAEf4B,EACE,kBAAC,GAAD,CACE5N,MAAM,MACN+E,KAAK,4BACLhF,QAAS,WACP4F,MAAM,gCAGV,kBAAC,GAAD,CACE3F,MAAM,OACN+E,KAAK,wCACLhF,QAxEE,WACtB8N,GAAkB,WC9BtB,IAAM5N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,MAAO,CACLa,WAAY,GACZnE,OAAQ,OACRO,UAAW,SACXE,WAAY,SACZJ,eAAgB,eAElBsE,KAAM,CACJC,UAAW,IAEb8I,QAAS,CACPnN,UAAW,SACXF,eAAgB,eAEnBsL,OAAQ,CACP/G,UAAW,QAIE,SAAS+I,KACtB,IAAM/M,EAAUhB,KADe,EAGPyB,IAAMC,SAAS,IAHR,mBAGxBrE,EAHwB,KAGlBiP,EAHkB,OAIX7K,IAAMC,SAAS,IAJJ,mBAIxB7F,EAJwB,KAIpBsJ,EAJoB,OAKqB1D,IAAMC,UAAS,GALpC,mBAKxBsM,EALwB,KAKJC,EALI,KAc/B,OACE,kBAAC,IAAMvO,SAAP,KACD,kBAACyG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MAChC,kBAAC/C,EAAA,EAAD,CACEE,QAAQ,KAAKqK,cAAY,EACzBhL,UAAW7B,EAAQ0C,OAFrB,yCAKA,0BACE4C,YAAU,EACVzD,UAAW7B,EAAQ+D,MACjB,kBAACtC,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,GACvB,kBAACkC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,GACvB1D,UAAW7B,EAAQ8M,SAEjBE,EACE,kBAACvL,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACb,kBAACjD,EAAA,EAAD,CACEE,QAAQ,MADV,oEAMF,kBAACf,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAACC,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTxE,OAAO,QACPvE,GAAG,KACH6K,KAAK,KACLC,MAAM,qBACNC,aAAa,KACbC,MAAOhL,EACPkL,SAAU,SAACzL,GAAO6J,EAAM7J,EAAE0L,OAAOH,UAEnC,kBAACL,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTxE,OAAO,QACPvE,GAAG,OACH6K,KAAK,OACLC,MAAM,2BACNC,aAAa,OACbC,MAAOxJ,EACP0J,SAAU,SAACzL,GAAOgR,EAAQhR,EAAE0L,OAAOH,YAK7C,kBAACpE,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb3D,QAAQ,WACRC,UAAW7B,EAAQ+K,SAEdiC,GACC,kBAAC,GAAD,CACEjO,MAAM,OACN+E,KAAK,qDACLhF,QAlEE,WACtBwM,EAAQ,IACRnH,EAAM,IAEN8I,GAAsB,W,wBCpBXC,GAhBM,WACnB,OACE,kBAAC,IAAMxO,SAAP,KACE,kBAAC4D,EAAA,EAAD,CAAYuK,cAAY,GAAxB,uHAGA,kBAAC5G,GAAA,EAAD,CACEb,UAAU,SACV5C,QAAQ,QACR1D,QAAS,kBAAMuC,SAASC,SAASC,KAAK,YAHxC,oCCGAvC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,MAAO,GAGPqB,KAAM,CACJC,UAAW,QAmGAmJ,OA/Ff,SAAsBjK,GAEpB,IAAMlD,EAAUhB,KACVuI,EAAsBrE,EAAMqE,SAElC,OACE,kBAACpC,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CACEE,QAAQ,KACRX,UAAW7B,EAAQ0C,OAFrB,4BAKA,kBAACjB,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,EACvBsC,UAAW7B,EAAQ+D,MACnB,kBAACtC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,sBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAAS1M,KAGd,kBAAC4G,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,sBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAASlL,OAGd,kBAACoF,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,gBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAAS6F,QAGd,kBAAC3L,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,sBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAAS8F,QAGd,kBAAC5L,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,gBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAASlK,SAGd,kBAACoE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,sBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAASjK,YAGd,kBAACmE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,4BAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAEXgC,EAASsE,OACP,eACA,uBAIR,kBAACpK,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,sBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAAS+F,mBAGd,kBAAC7L,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,sBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAASgG,oBC3FhBvO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,MAAO,GAGPqB,KAAM,CACJC,UAAW,IAEbF,KAAM,CACJ1E,OAAQ,OACR+J,cAAe,cA+MJqE,OA3Mf,SAAsBtK,GAEpB,IAAMlD,EAAUhB,KACVuI,EAAsBrE,EAAMqE,SAHC,EAKD9G,IAAMC,UAAS,GALd,mBAK5B+M,EAL4B,KAKjBC,EALiB,OAMPjN,IAAMC,SAASwC,EAAMqE,SAASlK,QANvB,mBAM5BA,EAN4B,KAMpBsQ,EANoB,OAODlN,IAAMC,SAASwC,EAAMqE,SAASjK,WAP7B,mBAO5BA,EAP4B,KAOjBsQ,EAPiB,OAQHnN,IAAMC,SAAS,IARZ,mBAQ5BjE,EAR4B,KAQlB2H,EARkB,OASS3D,IAAMC,SAAS,IATxB,mBAS5BmN,EAT4B,KASZC,EATY,OAUuBrN,IAAMC,SAAS,IAVtC,mBAU5BqN,EAV4B,KAULC,EAVK,KA0B7BC,EAAa,WACjBP,GAAa,IAaf,OACE,kBAACvI,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CACEE,QAAQ,KACRX,UAAW7B,EAAQ0C,OAFrB,4BAKA,kBAACjB,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,EACvBsC,UAAW7B,EAAQ+D,MAEf0J,EACE,kBAAC,IAAM/O,SAAP,KACE,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQ8D,MADrB,sBAIA,kBAACrC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAAS1M,KAGd,kBAAC4G,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQ8D,MADrB,sBAIA,kBAACrC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAASlL,OAGd,kBAACoF,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQ8D,MADrB,gBAIA,kBAACrC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAACC,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,SACLC,MAAM,SACN9K,GAAG,SACHgL,MAAOxI,EACP0I,SAAU,SAACzL,GAAD,OAAQqT,EAAUrT,EAAE0L,OAAOH,YAI3C,kBAACpE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQ8D,MADrB,sBAIA,kBAACrC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAACC,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,YACLC,MAAM,YACN9K,GAAG,YACHgL,MAAOvI,EACPyI,SAAU,SAACzL,GAAD,OAAQsT,EAAatT,EAAE0L,OAAOH,YAI9C,kBAACpE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQ8D,MADrB,yCAIA,kBAACrC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAACC,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,WACLC,MAAM,WACN9K,GAAG,WACHqL,KAAK,WACLL,MAAOgI,EACP9H,SAAU,SAACzL,GAAD,OAAQwT,EAAkBxT,EAAE0L,OAAOH,YAInD,kBAACpE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQ8D,MADrB,sDAIA,kBAACrC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAACC,GAAA,EAAD,CACE0G,MAAmC,KAA1B6B,GAAkCF,IAAmBE,EAC9D5B,WAAuC,KAA1B4B,GAAkCF,IAAmBE,EAAyB,oFAAqB,GAChHvL,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,kBACLC,MAAM,mBACN9K,GAAG,kBACHqL,KAAK,WACLL,MAAOkI,EACPhI,SAAU,SAACzL,GAAD,OAAQ0T,EAAyB1T,EAAE0L,OAAOH,YAI1D,kBAACpE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,GAAIhG,QAAS,GACpC,kBAACkC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAAC,GAAD,CACExG,MAAM,MACN+E,KAAK,eACLhF,QA7HF,WAjBhB4O,GAAa,GACbC,EAAUzK,EAAMqE,SAASlK,QACzBuQ,EAAa1K,EAAMqE,SAASjK,WAC5B8G,EAAY,IACZ0J,EAAkB,IAClBE,EAAyB,IAczBN,GAAa,OA6HC,kBAACjM,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAAC,GAAD,CACExG,MAAM,OACN+E,KAAK,eACLhF,QA9HJ,WAEd4F,MAAM,wCAiII,kBAAC,IAAMhG,SAAP,KACE,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EACb1D,UAAW7B,EAAQ8D,MADrB,yCAIA,kBAACrC,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAACC,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTgE,KAAK,QACLlC,KAAK,WACLC,MAAM,WACN9K,GAAG,WACHqL,KAAK,WACLL,MAAOpJ,EACPsJ,SAAU,SAACzL,GAAD,OAAQ8J,EAAY9J,EAAE0L,OAAOH,QACvCM,QAAS,SAAC7L,GAlKf,IAkKuCA,EAAE8L,SAjKvD6H,SAqKa,kBAACxM,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACb,kBAAC,GAAD,CACExG,MAAM,OACN+E,KAAK,eACLhF,QAASmP,U,wCClM/B,SAASC,GAAMhL,GACb,OAAO,kBAAC,KAAD,eAAUiL,UAAW,EAAG3L,QAAQ,UAAaU,IAGtD,IAAMlE,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C8D,KAAM,CACJtD,MAAO,OACP,YAAa,CACXsE,UAAW9E,EAAMK,QAAQ,SAKhB,SAAS6O,GAAQlL,GAC9B,IAAMlD,EAAUhB,KAD6B,EAErByB,IAAMC,SAASwC,EAAMvC,QAFA,mBAEtCoH,EAFsC,KAEhCsG,EAFgC,KAQvCC,EAAc,SAACC,EAA8BC,GAClC,cAAXA,GAIJH,GAAQ,IAGV,OACE,yBAAKxM,UAAW7B,EAAQgD,MACtB,kBAACyL,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C7G,KAAMA,EACN8G,iBAAkB3L,EAAM4L,SACxB9G,QAASsG,GACP,kBAAC,GAAD,CAAOtG,QAASsG,EAAaS,SAAU7L,EAAM6L,UAC1C7L,EAAMY,QChDnB,IAAM9E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,MAAO,GAGPqB,KAAM,CACJC,UAAW,IAEbgL,SAAU,CACRC,OAAQ/P,EAAM+P,OAAOC,OAAS,EAC9BnQ,MAAO,YAwGIoQ,OAlGf,SAAsBjM,GAEpB,IAAMlD,EAAUhB,KACVuI,EAAsBrE,EAAMqE,SAHC,EAKC9G,IAAMC,UAAS,GALhB,mBAK5ByK,EAL4B,KAKhBiE,EALgB,OAMa3O,IAAMC,UAAS,GAN5B,mBAM5B2O,EAN4B,KAMVC,EANU,OAOS7O,IAAMC,UAAS,GAPxB,mBAO5B6O,EAP4B,KAOZC,EAPY,KAS7BC,EAAc,uCAAG,sBAAA7T,EAAA,6DACrBwT,GAAc,GADO,SAGHhS,EAAcmK,EAASlK,OAAQkK,EAASjK,WAHrC,eAOnBgS,GAAoB,GACpBI,YAAW,kBAAMJ,GAAoB,KAnB1B,KAoBXI,YAAW,kBAAMrO,SAASC,SAASqO,WApBxB,OAwBXH,GAAkB,GAClBE,YAAW,WACTF,GAAkB,GAClBJ,GAAc,KA3BL,MAWQ,2CAAH,qDAqBpB,OACE,kBAACjK,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CACEE,QAAQ,KACRX,UAAW7B,EAAQ0C,OAFrB,4BAKA,kBAACjB,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,EACvBsC,UAAW7B,EAAQ+D,MACnB,kBAACtC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,gBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAASlK,SAGd,kBAACoE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,sBAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACZgC,EAASjK,YAGd,kBAACmE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAAf,4BAGA,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GAEXgC,EAASsE,OACP,eACA,uBAIR,kBAACpK,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,IACvB,kBAAC,GAAD,CACE0G,SAAUd,EACVpM,MAAM,OACN+E,KAAMqH,EAAa,yCAAa,2BAChCrM,QAAS2Q,MAGf,kBAACG,GAAA,EAAD,CAAU/N,UAAW7B,EAAQgP,SAAUjH,KAAMoD,GAC3C,kBAAC0E,GAAA,EAAD,CAAkB9Q,MAAM,aAGxBsQ,GACE,kBAACjB,GAAD,CACEzN,QAAQ,EACRoO,SAAS,UACTD,SArFK,IAsFLhL,KAAK,mHAGTyL,GACE,kBAACnB,GAAD,CACEzN,QAAQ,EACRoO,SAAS,QACTD,SA7FK,IA8FLhL,KAAK,iCC5GX9E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8D,KAAM,CACJgB,UAAW,IAEb8L,YAAa,GAEbC,aAAc,CACZtM,QAAS,QAsEEuM,OAlEf,WACE,IAAMhQ,EAAUhB,KAEViR,EAAiBpT,IACjB0K,EhByCsB,CAC1B1M,GgB1C0CoV,EhB2C1C5T,KAAM,gBACNgB,OAAQ,eACRC,UAAW,qBACXuO,QAAQ,EACRwB,MAAO,EACPD,MAAO,qBACPE,iBAAkB4C,IAClB3C,eAAgB2C,IAChBC,UAAU,GgBvDI,EAMQ1P,IAAMC,SAAS,QANvB,mBAMTuK,EANS,KAMHmF,EANG,KAoBhB,OACE,kBAAC,IAAM1R,SAAP,KAEe,KAAXuR,EACE,kBAAC,GAAD,MAEF,kBAAC9K,EAAA,EAAD,CACEtD,UAAW7B,EAAQgD,KACnBoC,UAAU,OACVC,SAAS,MACP,kBAAC5D,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EAAG1D,UAAW7B,EAAQ8P,aACnC,kBAACO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAUxR,QAzBN,WAClBsR,EAAQ,UAwBM,4BACA,kBAACrN,EAAA,EAAD,CAASP,QAAQ,WACjB,kBAAC8N,GAAA,EAAD,CAAUxR,QAvBN,WAClBsR,EAAQ,UAsBM,4BACA,kBAACrN,EAAA,EAAD,CAASP,QAAQ,WACjB,kBAAC8N,GAAA,EAAD,CAAUxR,QArBN,WAClBsR,EAAQ,UAoBM,8BAGJ,kBAACrN,EAAA,EAAD,CAASwN,YAAY,WAAWC,UAAQ,IACxC,kBAAC/O,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,EAAG1D,UAAW7B,EAAQ+P,cAExB,SAAT9E,GACE,kBAAC,GAAD,CACE1D,SAAUA,IAGL,SAAT0D,GACE,kBAAC,GAAD,CACE1D,SAAUA,IAGL,SAAT0D,GACE,kBAAC,GAAD,CACE1D,SAAUA,SC/E1BvI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8D,KAAM,CACJgB,UAAW,YAmBAyM,OAff,WAGE,OAFgBzR,KAGd,kBAAC,IAAMN,SAAP,KACE,kBAAC4D,EAAA,EAAD,uCAGA,kBAAC2D,GAAA,EAAD,CAAM1E,KAAK,eAAeiB,QAAQ,SAAlC,wB,+BCRAkO,I,OAAU,CACdrK,QAAS,CACP3E,UAAW,CACT,CAAC,CAAE,OAAU,KAAM,CAAC,OAAU,KAAM,CAAE,KAAQ,KAC9C,CAAC,CAACkG,KAAM,KACR,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAC,KAAQ,WAAY,CAAC,KAAQ,UAC/B,CAAC,OAAU,MAAO,CAAC,OAAU,OAC7B,CAAC,OAAQ,QAAS,WAgCtB+I,UAAW,CAETC,aAAa,KAMXC,GAAU,CACd,SAAU,OAAQ,OAClB,OAAQ,SAAU,YAAa,SAAU,aACzC,OAAQ,SAAU,SAClB,OAAQ,QAAS,SAsCJC,G,oDAjCb,WAAY5N,GAAgB,IAAD,+BACzB,cAAMA,IAED0H,MAAQ,CACXmG,QAAS,IAJc,E,sDAQjB,IAAD,OAECA,EAAYC,KAAKpG,MAAjBmG,QAQR,OACI,yBAAKlP,UAAU,UACb,kBAAC,KAAD,CACEgE,MAAOkL,EACP7R,MAAM,OACN6G,SAAU,SAACzL,IAXK,SAACA,GACvB,EAAK2W,SAAS,CACZF,QAASzW,IASa4W,CAAgB5W,IAClCoW,QAASA,GACTG,QAASA,GACTM,YAAa,iE,GA5BE1Q,IAAMoK,WCzC3B7L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8D,KAAM,CACJgB,UAAW,QAEboN,SAAU,CACRxI,SAAU,QACVjJ,UAAW,UAEb0R,WAAY,CACVrN,UAAW,QAEbgL,SAAU,CACRC,OAAQ/P,EAAM+P,OAAOC,OAAS,EAC9BnQ,MAAO,YA+JIuS,OAzJf,WACE,IAAMtR,EAAUhB,KADG,EAGiByB,IAAMC,UAAS,GAHhC,mBAGZyK,EAHY,KAGAiE,EAHA,OAI6B3O,IAAMC,UAAS,GAJ5C,mBAIZ2O,EAJY,KAIMC,EAJN,OAKyB7O,IAAMC,UAAS,GALxC,mBAKZ6O,EALY,KAKIC,EALJ,OAM+B/O,IAAMC,UAAS,GAN9C,mBAMZ6Q,EANY,KAMOC,EANP,OAOa/Q,IAAMC,SAAS,IAP5B,mBAOZ+Q,EAPY,KAOFC,EAPE,OAQOjR,IAAMC,SAAS,IARtB,mBAQZgC,EARY,KAQLiP,EARK,KAUbC,EAAWnR,IAAM6D,SA+CvB,OACE,kBAAC,IAAM5F,SAAP,KACE,kBAACyG,EAAA,EAAD,CACEE,SAAS,KACTxD,UAAW7B,EAAQgD,MACnB,kBAACvB,EAAA,EAAD,CACEC,WAAS,EACTnC,QAAS,EACToC,UAAU,SACVC,QAAQ,cACR,kBAACH,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAACsM,GAAA,EAAD,CACEC,QAAQ,gBACRjX,GAAG,WACHgL,MAAO4L,EACP1L,SA5Dc,SAACwI,GACzBmD,EAAYnD,EAAMvI,OAAOH,OACzB+L,EAASjN,QAAQC,SA2DPmN,cAAY,EACZlQ,UAAW7B,EAAQoR,UACjB,kBAACd,GAAA,EAAD,CAAUzK,MAAO,IAAjB,kCACA,kBAACyK,GAAA,EAAD,CAAUzK,MAAO,IAAjB,kCACA,kBAACyK,GAAA,EAAD,CAAUzK,MAAO,IAAjB,uBACA,kBAACyK,GAAA,EAAD,CAAUzK,MAAO,IAAjB,yBAGN,kBAACpE,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACb,kBAACC,GAAA,EAAD,CACEhD,QAAQ,WACRiD,UAAQ,EACR7B,WAAS,EACTxE,OAAO,QACPvE,GAAG,QACH6K,KAAK,QACLC,MAAM,QACNE,MAAOnD,EACPoD,SAAU8L,EACV7L,SAAU,SAACzL,GAAQqX,EAASrX,EAAE0L,OAAOH,WAGzC,kBAACpE,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACb,kBAAC,GAAD,OAEF,kBAAC9D,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACyD,GAAI,GACvB3D,QAAQ,gBACRC,UAAW7B,EAAQqR,YACjB,kBAAC5P,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAAC,GAAD,CACExG,MAAM,MACN+E,KAAK,eACLhF,QAxFE,WAChB0S,GAAqB,OAyFX,kBAAC/P,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAAC,GAAD,CACExG,MAAM,OACN+E,KAAK,eACLhF,QA1FC,WACfsQ,GAAc,GChEQ,SAAC1R,GAGzB,OAFAf,QAAQC,IAAIc,IAEL,ED8EOsU,CAdQ,CAClBjQ,IAAK,OACLkQ,QAAS,OACTvP,MAAO,QACPqO,QAAS,UACTmB,UAAW,EACXC,OAAQ,CACNC,QAAS,MACT9E,iBAAkB4C,IAClBmC,OAAQ,MACRC,mBAAoBpC,QAQtBZ,GAAoB,GACpBI,YAAW,kBAAMJ,GAAoB,KA9C1B,KA+CXI,YAAW,kBAAMrO,SAASC,SAASqO,WA/CxB,OAmDXH,GAAkB,GAClBE,YAAW,WACTF,GAAkB,GAClBJ,GAAc,KAtDL,aAsHX,kBAACQ,GAAA,EAAD,CAAU/N,UAAW7B,EAAQgP,SAAUjH,KAAMoD,GAC3C,kBAAC0E,GAAA,EAAD,CAAkB9Q,MAAM,aAGxBsQ,GACE,kBAACjB,GAAD,CACEzN,QAAQ,EACRoO,SAAS,UACTD,SA9HK,IA+HLhL,KAAK,mIAGTyL,GACE,kBAACnB,GAAD,CACEzN,QAAQ,EACRoO,SAAS,QACTD,SAtIK,IAuILhL,KAAK,mEAEX,kBAACgE,EAAA,EAAD,CACEC,KAAMwJ,GACJ,kBAACpJ,EAAA,EAAD,8EAGA,kBAACC,EAAA,EAAD,KACE,kBAACzJ,EAAA,EAAD,CAAQC,WAAS,EAACE,QAAS,WAAO0S,GAAqB,IAASzS,MAAM,WAAtE,UAGA,kBAACJ,EAAA,EAAD,CAAQG,QAAS,WAAO0S,GAAqB,IAASzS,MAAM,WAA5D,U,4DErLGwT,GALUC,gBAAK,CAC5BzQ,IAAK,mBACL0Q,QAAQ,KCwCKC,IC1CSF,gBAAK,CAC3BzQ,IAAK,kBACL0Q,QAAQ,KDWY,WAAO,IAAD,EAEYE,0BAAeJ,IAF3B,mBAEnBK,EAFmB,KAENC,EAFM,KAS1B,OACE,kBAACrN,GAAA,EAAD,CACE5B,WAAS,EACTgE,KAAK,QACL/M,GAAG,aACH6K,KAAK,aACLC,MAAM,eACNE,MAAO+M,EACP7M,SAAU,SAACzL,GAAD,OAbWuL,EAaYvL,EAAE0L,OAAOH,MAZ5CgN,EAAehN,QACflJ,QAAQC,IAAI,oBAAqBiJ,GAFX,IAACA,GAcrBiN,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBtK,SAAS,SACvB,kBAAC,KAAD,YExBN1J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+T,OAAQ,CACN7T,OAAQ,OACRK,eAAgB,iBAElByT,KAAM,CACJ9T,OAAQ,SACRK,eAAgB,iBAElB0T,IAAK,CACH1P,QAASvE,EAAMK,QAAQ,GACvBO,WAAY,OAID,SAAS4M,KACtB,IAAM1M,EAAUhB,KADe,EAGLyB,IAAMC,SAAS,GAHV,mBAGxBmF,EAHwB,KAGjBuN,EAHiB,KAKXC,0BAAed,IAqBnC,OACE,kBAAC,IAAM7T,SAAP,KACD,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,EAAC6D,GAAI,GAAIhG,QAAS,EAC5BsC,UAAW7B,EAAQiT,QACnB,kBAACxR,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAAC+N,GAAA,EAAD,CACEzN,MAAOA,EACPE,SAXY,SAACzL,EAA0BiZ,GAC/CH,EAASG,IAWDC,eAAe,UACfC,UAAU,WA5BO,CACzB,CACE1R,IAAK,KACLW,MAAO,gBAET,CACEX,IAAK,KACLW,MAAO,iBAET,CACEX,IAAK,KACLW,MAAO,kBAmBQtC,KAAI,SAAC+S,GACR,OACE,kBAACO,GAAA,EAAD,CACE3R,IAAKoR,EAAIpR,IACTF,UAAW7B,EAAQmT,IACnBxN,MAAOwN,EAAIzQ,aAOzB,kBAACjB,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,GACb,kBAAC,GAAD,OAEF,kBAAC9D,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,O,sGC7EjBoO,GAA6B,CACjC,CACE3R,IAAK,EACLD,IAAK,OACL2D,KAAM,kCACNkO,WAAY,KACZC,WAAY,IACZC,eAAgB,EAChBC,eAAgB,GAChBC,cAAe,IACfC,OAAO,CACL,CACEvO,KAAM,2BACNuO,OAAQ,CACN,CACElS,IAAK,KACLW,MAAO,+BAIb,CACEgD,KAAM,qBACNuO,OAAQ,CACN,CACElS,IAAK,KACLW,MAAO,kCAET,CACEX,IAAK,KACLW,MAAO,qCAKfwR,IAAK,mBAEP,CACElS,IAAK,EACLD,IAAK,OACL2D,KAAM,kCACNkO,WAAY,KACZC,WAAY,IACZC,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,IACfC,OAAO,CACL,CACEvO,KAAM,qBACNuO,OAAQ,CACN,CACElS,IAAK,KACLW,MAAO,wCAET,CACEX,IAAK,KACLW,MAAO,+DAKfwR,IAAK,oBAIHC,GAA8B,CAClC,CACEnS,IAAK,EACLD,IAAK,OACL2D,KAAM,qBACNkO,WAAY,IACZC,WAAY,IACZC,eAAgB,EAChBC,eAAgB,GAChBC,cAAe,EACfC,OAAO,CACL,CACEvO,KAAM,qBACNuO,OAAQ,CACN,CACElS,IAAK,KACLW,MAAO,+DAET,CACEX,IAAK,KACLW,MAAO,qDAET,CACEX,IAAK,KACLW,MAAO,2DAET,CACEX,IAAK,KACLW,MAAO,wCAET,CACEX,IAAK,KACLW,MAAO,2CAKfwR,IAAK,oBCrFHlV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8D,KAAM,CACJgB,UAAW,QAEboQ,MAAO,CACLxL,SAAU,KAEZyL,gBAAiB,CACf5Q,QAASvE,EAAMK,QAAQ,KAEzB+U,eAAgB,CACdtQ,UAAW,OACXyI,aAAc,QAEhB8H,WAAY,CACV7U,MAAOR,EAAMK,QAAQ,GACrB+D,OAAQpE,EAAMK,QAAQ,QAIpBiV,GAAiBC,cAAW,SAACvV,GAAD,OAClCwV,aAAa,CACX1R,KAAM,CACJ2R,gBAAiB,UACjB,qBAAsB,CACpBA,gBAAiB,WAEnB,UAAW,CACTA,gBAAiB,gBARAF,CAYrBG,MAEIC,GAAkBJ,cAAW,SAACvV,GAAD,OACjCwV,aAAa,CACXI,KAAM,CACJH,gBAAiB,UACjB5V,MAAOG,EAAMqH,QAAQwO,OAAOC,OAE9BC,KAAM,CACJC,SAAU,QAPQT,CAUtBU,MAEa,SAASC,KACtB,IAAMpV,EAAUhB,KAEVqW,EDwCyB,WAC/B,IAAMC,EAA6B,GAenC,OAdAA,EAAY/U,KAAK,CACfyB,IAAK,EACLD,IAAK,KACLkQ,QAAS,WACTsD,UAAW5B,KAGb2B,EAAY/U,KAAK,CACfyB,IAAK,EACLD,IAAK,KACLkQ,QAAS,WACTsD,UAAWpB,KAGNmB,ECxDyBE,GAC1Bpa,EAAoBD,IAK1B,OACE,kBAAC,IAAMuD,SAAP,KAaI2W,EAASjV,KAAI,SAACqV,GACZ,OACE,kBAACC,GAAA,EAAD,CAAgBtQ,UAAWuQ,KAAO9T,UAAW7B,EAAQsU,eAAgBvS,IAAK0T,EAAM1T,KAC9E,kBAAC6T,GAAA,EAAD,CAAO/T,UAAW7B,EAAQoU,MAAOyB,aAAA,UAAeJ,EAAMxD,QAArB,WAC/B,kBAAC6D,GAAA,EAAD,KACE,kBAAClB,GAAA,EAAD,KACE,kBAACC,GAAD,KAAkBY,EAAMxD,SACxB,kBAAC4C,GAAD,CAAiBtS,MAAM,QAAvB,4BACA,kBAACsS,GAAD,CAAiBtS,MAAM,SAAvB,mCACA,kBAACsS,GAAD,CAAiBtS,MAAM,SAAvB,+BAGJ,kBAACwT,GAAA,EAAD,KAEIN,EAAMF,UAAUnV,KAAI,SAAC4V,GAAD,OAClB,kBAACxB,GAAD,CAAgBzS,IAAKiU,EAAKtQ,KACxB5G,QAAS,kBAlCNiD,EAkC4BiU,EAAKjU,SAjCxDV,SAASC,SAASC,KAAK,aAAeQ,GADhB,IAACA,IAmCD,kBAAC8S,GAAD,CAAiBzP,UAAU,KAAK6Q,MAAM,OACpC,kBAACC,GAAA,EAAD,CAAQ1L,IAAKpP,EAAkB+a,OAAOH,EAAK9B,KACzCrS,UAAW7B,EAAQuU,cAEvB,kBAACM,GAAD,CAAiBtS,MAAM,QAAQyT,EAAKtQ,MACpC,kBAACmP,GAAD,CAAiBtS,MAAM,SAASyT,EAAKpC,YACrC,kBAACiB,GAAD,CAAiBtS,MAAM,SAASyT,EAAKlC,eAArC,MAAwDkC,EAAKjC,2BCpGvF,IAAM/U,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8D,KAAM,GAGNsH,MAAO,CACL5K,MAAOR,EAAMK,QAAQ,IACrB+D,OAAQpE,EAAMK,QAAQ,SAyCX6W,OArCf,YAAiC,IAAdC,EAAa,EAAbA,MACXrW,EAAUhB,KACR+C,EAAQsU,EAAMC,OAAdvU,IAEF3G,EAAoBD,IACpB6a,EFqGuB,SAACO,GAC9B,IAAIC,EAQJ,OAJsB,IAFtBA,EAAU7C,GAAa8C,QAAO,SAACT,GAAD,OAAUA,EAAKjU,MAAQwU,MAEzC9R,SACV+R,EAAUrC,GAAcsC,QAAO,SAACT,GAAD,OAAUA,EAAKjU,MAAQwU,MAGjDC,EE9GME,CAAgB3U,GAE7B,OACE,kBAAC,IAAMrD,SAAP,KAEIsX,EAAKvR,OAAS,EACZ,kBAACU,EAAA,EAAD,CAAWtD,UAAW7B,EAAQgD,MAC5B,kBAACvB,EAAA,EAAD,CAAMC,WAAS,EACbC,UAAU,SACVC,QAAQ,SACR/B,WAAW,UACT,kBAAC4B,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACb,kBAAC2Q,GAAA,EAAD,CAAQ1L,IAAKpP,EAAkB+a,OAAOH,EAAK,GAAG9B,KAC5CrS,UAAW7B,EAAQsK,SAEvB,kBAAC7I,EAAA,EAAD,CAAMK,MAAI,EAACyD,GAAI,IACb,kBAACjD,EAAA,EAAD,CACEE,QAAQ,MACPwT,EAAK,GAAGtQ,SAMnB,kBAACP,EAAA,EAAD,gFCoBKwR,OA3Cf,WACE,OACE,kBAACxR,EAAA,EAAD,CACEE,SAAS,MACT,kBAAC,IAAM3G,SAAP,KACE,gCACE,kBAACyG,EAAA,EAAD,KACE,kBAAC4B,GAAD,QAGJ,8BACE,kBAAC5B,EAAA,EAAD,CACEyR,OAAK,GACL,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI1R,UAAWuF,KACjC,kBAAC,IAAD,CAAOkM,OAAK,EAACC,KAAK,QAAQ1R,UAAW3G,IAGrC,kBAAC,IAAD,CAAOoY,OAAK,EAACC,KAAK,UAAU1R,UAAWlB,KACvC,kBAAC,IAAD,CAAO2S,OAAK,EAACC,KAAK,UAAU1R,UAAW4F,KACvC,kBAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,UAAU1R,UAAWsH,KACvC,kBAAC,IAAD,CAAOmK,OAAK,EAACC,KAAK,UAAU1R,UAAW2H,KAGvC,kBAAC,IAAD,CAAO8J,OAAK,EAACC,KAAK,cAAc1R,UAAWqL,KAC3C,kBAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,eAAe1R,UAAWkM,KAG5C,kBAAC,IAAD,CAAOwF,KAAK,YAAY1R,UAAW2R,KACnC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAY1R,UAAWgQ,KACzC,kBAAC,IAAD,CAAO0B,KAAK,iBAAiB1R,UAAWgR,KAGxC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,UAAU1R,UAAW4K,W,UCnDrDgH,IAASC,OACP,kBAAC,IAAMvY,SAAP,KAEE,kBAAC,cAAD,KACE,kBAACwY,GAAA,EAAD,MACA,kBAAC,GAAD,QAIJ7V,SAAS8V,eAAe,W","file":"static/js/main.973b90d4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 221;","// 해당 파일은 빌드 배포 등 노출된 공간에 올릴 때 반드시 ignore 할 것.!\nconst jwtObject = {\n  secret: \"Baram\"\n};\n\nexport default jwtObject;","import config from 'conf/config.json';\n\nimport IMenu from 'interfaces/Common/IMenu';\n\nexport const getSessionNameUserToken = () => {\n  return config.sessionUserToken;\n}\n\nexport const getBaseUrlForMainCarousel = () => {\n  return config.baseUrlForMainCarousel;\n}\n\nexport const getBaseUrlForRaidImg = () => {\n  return config.baseUrlForRaidImg;\n}\n\nexport const getMenus = () => {\n  const menus = Array<IMenu>();\n\n  config.menus.map((menu, i) => {\n    menus.push(menu);\n  });\n  \n  return menus;\n}","/* when import\n* import * as CommonUtil from 'utils/ComoonUtil';\n*/\n\nexport const getNowDateString = () => {\n  return new Date().toLocaleString();\n}","import { MongoClient } from 'mongodb';\n\nimport { mongoDbConnectionString } from 'conf/mongodb';\n\nimport ISignUpUser from 'interfaces/User/ISignUpUser';\n\nconst MyMongoClient = new MongoClient(mongoDbConnectionString, { useNewUrlParser: true });\n\nconst init = async () => {\n  await MyMongoClient.connect();\n}\n\nexport const createSignUpUser = (user: ISignUpUser) => {\n  init();\n}","export const mongoDbConnectionString = \"mongodb+srv://dearlsh:admin@mycluster.xcgrs.mongodb.net/baram?retryWrites=true&w=majority\"","import axios from 'axios';\nimport cheerio from 'cheerio';\nimport crypto from 'crypto';\nimport jsonwebtoken from 'jsonwebtoken';\n\nimport jwtObject from 'conf/jwt';\n\nimport IUserInfo from 'interfaces/User/IUserInfo';\nimport ISignUpUser from 'interfaces/User/ISignUpUser';\nimport ISignInUser from 'interfaces/User/ISignInUser';\nimport { getSessionNameUserToken } from 'utils/ConfigUtil';\n\nimport * as CommonUtil from 'utils/ComoonUtil';\n\nimport * as MyMongo from 'shared/index';\n\nexport const SignUpUser = (user: ISignUpUser) => {\n\n  // Create Encrypt salt\n  let mySalt = Math.round((new Date().valueOf() * Math.random())) + \"\";\n\n  const newUser: ISignUpUser = {\n    id: user.id,\n    mail: user.mail,\n    password: crypto.createHash(\"sha512\").update(user.password + mySalt).digest(\"hex\"),\n    salt: mySalt\n  }\n\n  console.log(\"RUN SignUpUser\");\n  //TODO - DB Process for Create User\n  const res = MyMongo.createSignUpUser(newUser);\n\n//  console.log(\"NEW USER CREATED > \", res);\n\n  return true;\n}\n\nexport const SignInUser = (_id: string, _password: string) => {\n  // TODO - DB Process for Check Sign Up User\n\n  // Create JWT\n  const token = jsonwebtoken.sign(\n    {\n      id: _id,\n    },\n    jwtObject.secret,\n    {\n      expiresIn: '5m'\n    }\n  );\n\n  // Create SignIn User Info\n  const signInUser: ISignInUser = {\n    token: token,\n  }\n\n  // Session Store\n  setSessionUserToken(signInUser);\n}\n\nexport const getSignInUserId = () => { \n  const userToken = getSessionUserToken();\n  if ( userToken === null ) {\n    return \"\";\n  }\n\n  const userId = getIdFromJWT(JSON.parse(userToken).token);\n\n  return userId;\n}\n\nexport const getUserInfoById = (_id: string) => {\n  // TODO - DB Process Get UserInfo By Id\n\n  const userInfo: IUserInfo = {\n    id: _id,\n    mail: \"mail@mail.net\",\n    server: \"하자\",\n    character: \"협가검\",\n    isAuth: true,\n    point: 0,\n    grade: \"초보자\",\n    createDateString: CommonUtil.getNowDateString(),\n    authDateString: CommonUtil.getNowDateString(),\n    isActive: true\n  }\n\n  return userInfo;\n}\n\nexport const LogoutUser = () => {\n  delSessionUserToken();\n}\n\n\n/*\n* 바람의 나라 공식 사이트 한줄인사말 데이터 크롤링하여, 사용자 인증 처리\n*/\nexport const checkGameUser = (server: string, character: string) => {\n\n  return new Promise((resolve, reject) => {\n    axios.post('/api/user/check', \n      {\n        character: character,\n        server: server\n      })\n      .then((res) => {\n        console.log(\"[TODO] RUN DB PROCESS\");\n\n        resolve(res);\n      })\n      .catch((e) => {\n        console.log(\"CHECK GAME USER ERROR > \", e);\n\n        resolve(false);\n      })\n  });\n}\n\n\n\nconst setSessionUserToken = (signInUser: ISignInUser) => {\n  localStorage.setItem(\n    getSessionNameUserToken(),\n    JSON.stringify(signInUser)\n  );\n}\n\nconst getSessionUserToken = () => {\n  return localStorage.getItem(getSessionNameUserToken());\n}\n\nconst delSessionUserToken = () => {\n  localStorage.removeItem(getSessionNameUserToken());\n}\n\n\n\n/*\n* JWT 구조\n* [HEADER].[PAYLOAD].[VERIFY SIGNATURE]\n*/\nconst getIdFromJWT = (token: string) => {\n  // Get Token\n  const splitToken = token.split(\".\");\n\n  // Get Payload Token\n  const payloadToken = splitToken[1];\n\n  // Decode Base64 and Transfer to JSON\n  const payload = JSON.parse(atob(payloadToken));\n\n  return payload.id;\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport { SignUpUser } from 'utils/UserUtil';\n\nexport default function Test() {\n\n  const _onTest = () => {\n    SignUpUser({\n      id: \"whitow\",\n      password: \"admin\",\n      mail: \"whitow@test.com\"\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <Button \n        autoFocus\n        tabIndex={-1}\n        onClick={_onTest} \n        color=\"primary\">\n          유저생성\n      </Button>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nimport { getMenus } from 'utils/ConfigUtil';\nimport IMenu from 'interfaces/Common/IMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  menuTabs: {\n    margin: \"0 auto\",\n  },\n  menuTab: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    justifyContent: \"space-around\",\n    width: \"13%\",\n    textAlign: \"center\",\n  },\n  tabListItem: {\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    flexShrink: 0,\n  }\n}));\n\nexport default function TopTaps() {\n  const classes = useStyles();\n  \n  const Menus: Array<IMenu> = getMenus();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isOpenFixed, setIsOpenFixed] = React.useState(false);\n\n  const _tabsOpen = () => {\n    setIsOpen(true);\n  }\n  const _tabsClose = () => {\n    setIsOpen(false);\n  }\n\n  const _onTabsEnter = (e: React.MouseEvent<{}>) => {\n    _tabsOpen();\n  }\n  const _onTabsLeave = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    _tabsClose();\n  }\n\n  const _onListItemOpen = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setIsOpenFixed(true);\n    _tabsOpen();\n  }\n  const _onListItemClose = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setIsOpenFixed(false);\n    _tabsClose();\n  }\n\n  const _onMoveMenu = (url: string) => {\n    document.location.href = url;\n  }\n\n  return (\n    <React.Fragment>\n      <Box>\n        <Grid\n          container\n          spacing={0}\n          direction=\"row\"\n          justify=\"center\"\n          className={classes.menuTabs}>\n          {\n            Menus.map((menu: IMenu) => {\n              return(\n                <Grid\n                  item\n                  key={menu.idx}\n                  className={classes.menuTab}\n                  onMouseEnter={_onTabsEnter}\n                  onMouseLeave={_onTabsLeave}>\n                    <List>\n                      <ListItem\n                        key={menu.key}\n                        button\n                        className={classes.tabListItem}\n                        onClick={() => (_onMoveMenu(menu.url))}>\n                          <Typography\n                            align=\"center\"\n                            variant=\"subtitle1\"\n                            display=\"block\">\n                              {menu.title}\n                          </Typography>\n                      </ListItem>\n                      {\n                        (isOpen || isOpenFixed) &&\n                          menu.sub.map((submenu: IMenu) => (\n                            <ListItem\n                              key={submenu.key}\n                              button\n                              className={classes.tabListItem}\n                              onClick={() => (_onMoveMenu(submenu.url))}>\n                                <Typography\n                                  align=\"center\"\n                                  variant=\"subtitle2\"\n                                  display=\"block\">\n                                    {submenu.title}\n                                </Typography>\n                            </ListItem>\n                          ))\n                      }\n                    </List>\n                </Grid>\n              );\n            })\n          }\n          <Grid\n            item\n            sm={1}\n            className={classes.menuTab}>\n            {\n              isOpenFixed ?\n                <IconButton\n                  onClick={_onListItemClose}>\n                  <ExpandLessIcon/>\n                </IconButton>\n              :\n                <IconButton\n                  onClick={_onListItemOpen}>\n                  <ExpandMoreIcon/>\n                </IconButton>\n            }\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider/>\n    </React.Fragment>\n  );\n}\n","import React, { ButtonHTMLAttributes } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\nimport { Omit } from '@material-ui/types';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement>{\n  color: 'red' | 'blue',\n  text?: string,\n}\n\nconst useStyles = makeStyles({\n  root: {\n    background: (props: Props) =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: (props: Props) =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: \"auto\",\n    paddingTop: 4,\n    paddingBottom: 4,\n    padding: '0 50px',\n  },\n});\n\nfunction MyButton(props: Props & Omit<MuiButtonProps, keyof Props>) {\n  const { color, ...other } = props;\n  const classes = useStyles(props);\n  return <Button \n            fullWidth\n            variant=\"contained\"\n            className={classes.root} \n            {...other}/>;\n}\n\nexport default function AdaptingHook(props: Props) {\n  return (\n    <React.Fragment>\n      <MyButton \n        {...props}>\n          {props.text}\n      </MyButton>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nimport MyButton from 'elements/Button/MyButton';\n\nimport { SignInUser } from 'utils/UserUtil';\n\nconst useStyles = makeStyles((theme) => ({\n\tform: {\n\t\tmarginTop: 0,\n\t},\n\tsignin: {\n\t\tmarginTop: 20,\n\t},\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n\tconst [id, setId] = React.useState(\"\");\n\tconst [password, setPassword] = React.useState(\"\");\n\n\tconst refId = React.useRef<any>();\n\tconst refPassword = React.useRef<any>();\n\n\tconst _onEnterPassword = (keyCode: number) => {\n\t\tif (keyCode == 13) {\n\t\t\t_onSignIn();\n\t\t}\n\t}\n\n\tconst _onSignIn = () => {\n\t\tif ( id.length < 1 ) {\n\t\t\talert(\"PLEASE INPUT USER ID\");\n\t\t\trefId.current.focus();\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( password.length < 1 ) {\n\t\t\talert(\"PLEASE INPUT PASSWORD\");\n\t\t\trefPassword.current.focus();\n\n\t\t\treturn false;\n\t\t}\n\n\t\tSignInUser(id, password);\n\n\t\tdocument.location.href=\"/\";\n\t}\n\n  return (\n    <React.Fragment>\n\t\t\t<Container \n\t\t\t\tcomponent=\"main\" \n\t\t\t\tmaxWidth=\"xs\">\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate \n\t\t\t\t\t\tclassName={classes.form}>\n\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User ID\"\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\t\t\t\t\tinputRef={refId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setId(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Link href=\"/findid\" variant=\"body2\" tabIndex={-1}>\n\t\t\t\t\t\t\t\t\t\t\t아이디 찾기\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\tinputRef={refPassword}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) => _onEnterPassword(e.keyCode)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Link href=\"/findpw\" variant=\"body2\" tabIndex={-1}>\n\t\t\t\t\t\t\t\t\t\t\t비밀번호 찾기\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item xs={12}\n\t\t\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t\t\t\tclassName={classes.signin}>\n\t\t\t\t\t\t\t\t\t<MyButton\n\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\t\ttext=\"로그인\"\n\t\t\t\t\t\t\t\t\t\tonClick={_onSignIn}/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t</Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\n\nimport TopTaps from 'components/Header/TopTaps';\nimport SignIn from 'pages/User/SignIn';\n\nimport { getSignInUserId, LogoutUser } from 'utils/UserUtil';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarleft: {\n    textAlign: \"left\",\n  },\n  toolbarcenter: {\n    textAlign: \"center\"\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarright: {\n    textAlign: \"right\",\n  },\n  dialogActions: {\n    justifyContent: \"space-between\"\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const [isSignInOpen, setIsSignInOpen] = React.useState(false);\n\n  const userInfo = getSignInUserId();\n  console.log(userInfo);\n\n  const _onMoveToMain = () => {\n    document.location.href = \"/\";\n  }\n\n  const _onSignInOpen = () => {\n    setIsSignInOpen(true);\n  };\n\n  const _onSignInClose = () => {\n    setIsSignInOpen(false);\n  };\n\n  const _onMoveSignUp = () => {\n    document.location.href = \"/signup\";\n  }\n\n  const _onLogoutUser = () => {\n    LogoutUser();\n    \n    _onMoveToMain();\n  }\n\n  return (\n    <React.Fragment>\n      <React.Fragment>\n        <nav>\n          <Toolbar \n            className={classes.toolbar}>\n            <Grid container item xs={12}>\n              <Grid item xs={3}\n                className={classes.toolbarleft}>                  \n                <Button \n                  size=\"small\">\n                    Subscribe\n                </Button>\n              </Grid>\n              <Grid item xs={6}>                  \n                <Typography\n                  component=\"h2\"\n                  variant=\"h5\"\n                  color=\"inherit\"\n                  align=\"center\"\n                  noWrap\n                  className={classes.toolbarTitle}\n                  onClick={_onMoveToMain}\n                >\n                  logo\n                </Typography>\n              </Grid>\n              <Grid item xs={3}\n                className={classes.toolbarright}>\n                  {\n                    userInfo === \"\" ?\n                      <Container>\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\"\n                          onClick={_onSignInOpen}>\n                            SignIn\n                        </Button>\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\"\n                          onClick={_onMoveSignUp}\n                        >\n                          SignUp\n                        </Button>\n                      </Container>\n                    :\n                      <Button \n                        variant=\"outlined\" \n                        size=\"small\"\n                        onClick={_onLogoutUser}>\n                         Logout\n                      </Button>\n                  }               \n              </Grid>\n            </Grid>\n          </Toolbar>\n        </nav>\n        <aside>\n          <Box>\n            <TopTaps/>\n          </Box>\n        </aside>\n      </React.Fragment>\n      <Dialog\n        fullScreen={fullScreen}\n        open={isSignInOpen}\n        onClose={_onSignInClose}\n        aria-labelledby=\"responsive-dialog-title\">\n          <DialogTitle \n            id=\"responsive-dialog-title\">\n              {\"로그인\"}\n          </DialogTitle>\n          <DialogContent>\n            {/*\n            <DialogContentText>\n              Blah Blah ~~~~ \n            </DialogContentText>\n            */}\n            <SignIn/>\n          </DialogContent>\n          <DialogActions\n            className={classes.dialogActions}>\n            <Button \n              autoFocus \n              tabIndex={-1}\n              onClick={_onMoveSignUp} \n              color=\"primary\">\n                회원가입\n            </Button>\n            <Button \n              autoFocus\n              tabIndex={-1}\n              onClick={_onSignInClose} \n              color=\"primary\">\n                닫기\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport Carousel from \"react-slick\";\nimport { getBaseUrlForMainCarousel } from 'utils/ConfigUtil';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: \"5 0\",\n    width: \"100%\",\n    height: \"auto\",\n    marginLeft: \"auto !important\",\n    marginRight: \"auto !important\",\n  },\n  gridContainer: {\n    marginTop: \"15px\",\n    marginRight: \"-15px\",\n    marginLeft: \"-15px\",\n    width: \"auto\"\n  },\n  cardCarousel: {\n    border: \"0\",\n    borderRadius: \"6px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#fff\",\n    width: \"100%\",\n    maxHeight: \"300px\",\n    boxShadow:\n      \"0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    transition: \"all 300ms linear\",\n    overflow: \"hidden\"\n  },\n  gridItem: {\n    position: \"relative\",\n    width: \"100%\",\n    flexBasis: \"auto\",\n  },\n  btnMove: {\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    verticalAlign: \"middle\",\n  }\n}));\n\nfunction NextArrow(props: any) {\n  const { onClick } = props;\n  return (\n    <IconButton\n      onClick={onClick}>\n        <ArrowForwardIosIcon/>\n    </IconButton>\n  );\n}\n\nfunction PrevArrow(props: any) {\n  const { onClick } = props;\n  return (\n    <IconButton\n      onClick={onClick}>\n        <ArrowBackIosIcon/>\n    </IconButton>\n  );\n}\n\nexport default function MainCarousel() {\n  const classes = useStyles();\n  const settings = {\n    dots: true,\n    arrows: true,\n    infinite: true,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    NextArrow: <NextArrow />,\n    PrevArrow: <PrevArrow />\n  };\n\n  const baseUrlForMainCarousel = getBaseUrlForMainCarousel();\n\n  //creating the ref\n  const refCarousel: React.RefObject<Carousel> = React.createRef();\n\n  const images = [];\n  images.push(\"bg1.jpg\");\n  images.push(\"bg2.jpg\");\n  images.push(\"bg3.jpg\");\n\n  return (\n    <Container\n      className={classes.container}>\n      <Grid container className={classes.gridContainer}>\n        <Grid item xs={1} className={classes.btnMove}>\n          <IconButton\n            onClick={() => refCarousel.current?.slickPrev()}>\n              <ArrowBackIosIcon/>\n          </IconButton>\n        </Grid>\n        <Grid item xs={10} className={classes.gridItem}>\n            <Carousel ref={refCarousel}\n              {...settings}>\n              {\n                images.map((image, i) => (\n                  <Card className={classes.cardCarousel} key={image}>\n                      <img src={baseUrlForMainCarousel + image} alt={\"slide_\" + i} className=\"slick-image\" />\n                  </Card>\n                ))\n              }\n            </Carousel>\n        </Grid>\n        <Grid item xs={1} className={classes.btnMove}>\n          <IconButton\n            onClick={() => refCarousel.current?.slickNext()}>\n              <ArrowForwardIosIcon/>\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}","import React, {Component} from 'react';\n\nimport MainCarousel from 'components/MainCarousel';\n\ninterface IProps {\n\n}\n\ninterface IState {\n    menu: \"menu1\" | \"menu2\"\n}\n\nclass Home extends Component <IProps, IState>{\n\n\tconstructor(props: IProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmenu: \"menu1\"\n\t\t}\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<MainCarousel/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nimport ISignUpUser from 'interfaces/User/ISignUpUser';\n\nimport MyButton from 'elements/Button/MyButton';\n\nimport { SignUpUser } from 'utils/UserUtil';\n\nconst useStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tmarginTop: 10,\n\t\ttextAlign: \"center\",\n\t},\n\tform: {\n\t\tmarginTop: 20,\n\t},\n\ttextButton: {\n\t\talignItems: \"center\"\n\t},\n\tsignup: {\n\t\tmarginTop: 20,\n\t}\n}));\n\ninterface IProps{\n\tmode: \"create\" | \"edit\"\n}\n\ninterface IState{\n\tid: string,\n\tpassword: string,\n\tpasswordConfirm: string,\n\tmail: string,\n\tmailAuth: string,\n}\n\nexport default function SignUp(props: IProps) {\n\tconst classes = useStyles();\n\t\n\tconst [isEdit, setIsEdit] = React.useState(props.mode === \"edit\" ? true : false);\n\tconst [isDisabled, setIsDisabled] = React.useState(isEdit);\n\tconst [id, setId] = React.useState(\"\");\n\tconst [password, setPassword] = React.useState(\"\");\n\tconst [passwordConfirm, setPasswordConfirm] = React.useState(\"\");\n\tconst [mail, setMail] = React.useState(\"\");\n\tconst [mailAuth, setMailAuth] = React.useState(\"\");\n\tconst [isAgree, setIsAgree] = React.useState(false);\n\n\tconst [isSend, setIsSend] = React.useState(false);\n\tconst [isAuth, setIsAuth] = React.useState(false);\n\n\tconst _onEnterMail = (keyCode: number) => {\n\t\tif (keyCode == 13) {\n\t\t\t_onClickAuthSend();\n\t\t}\n\t}\n\tconst _onClickAuthSend = () => {\n\t\tif (password !== passwordConfirm) {\n\t\t\talert(\"비밀번호를 확인해주세요\");\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tsetIsSend(true);\n\t}\n\t\n\tconst _onEnterMailAuth = (keyCode: number) => {\n\t\tif (keyCode == 13) {\n\t\t\t_onClickAuth();\n\t\t}\n\t}\n\tconst _onClickAuth = () => {\n\t\tsetIsAuth(true);\n\t}\n\n\tconst _onClickSignUp = () => {\n\t\tif (!isAgree) {\n\t\t\talert(\"동의 후 진행가능합니다.\");\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst signUpUser: ISignUpUser = {\n\t\t\tid: id,\n\t\t\tpassword: password,\n\t\t\tmail: mail,\n\t\t};\n\n\t\tif ( SignUpUser(signUpUser) ) {\n\t\t\talert(\"회원가입 성공!\");\n\t\t}\n\t\telse {\n\t\t\talert (\"회원가입 실패!\")\n\t\t};\n\t\t\n\t}\n\n  return (\n    <React.Fragment>\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<Typography \n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tcomponent=\"h1\" \n\t\t\t\t\tvariant=\"h5\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isEdit &&\n\t\t\t\t\t\t\t\t\"Sign Up\"\n\t\t\t\t\t\t}\n\t\t\t\t</Typography>\n\t\t\t\t\t{\n\t\t\t\t\t\t!isSend &&\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User ID\"\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setId(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setPassword(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\terror={((passwordConfirm !== \"\") && (password !== passwordConfirm))}\n\t\t\t\t\t\t\t\t\t\t\thelperText={(passwordConfirm !== \"\") && (password !== passwordConfirm) ? \"비밀번호가 일치하지 않습니다.\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"passwordConfrim\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"password Confrim\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"passwordConfrim\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setPasswordConfirm(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"mail\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"mail\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={mail}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setMail(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) => _onEnterMail(e.keyCode)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textButton}\n\t\t\t\t\t\t\t\t\t\t\tonClick={_onClickAuthSend}>\n\t\t\t\t\t\t\t\t\t\t\t\t인증요청\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\t(isSend && !isAuth) &&\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"mailAuth\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Authentication Code\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"mailAuth\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={mailAuth}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setMailAuth(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) => _onEnterMailAuth(e.keyCode)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textButton}\n\t\t\t\t\t\t\t\t\t\t\tonClick={_onClickAuth}>\n\t\t\t\t\t\t\t\t\t\t\t\t인증확인\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\t(isSend && isAuth) &&\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t(isAuth) &&\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t인증방식 설명\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"allowExtraEmails\" \n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\" \n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={isAgree}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(() => {setIsAgree(!isAgree)})}/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"내용을 다 읽고 이해하였습니다.\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid \n\t\t\t\t\t\t\t\t\t\tcontainer \n\t\t\t\t\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.signup}>\n\t\t\t\t\t\t\t\t\t\t\t<MyButton\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"blue\"\n\t\t\t\t\t\t\t\t\t\t\t\ttext=\"SIGN UP\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={_onClickSignUp}/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t</Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport MyButton from 'elements/Button/MyButton';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    paddingTop: 20,\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"flex-center\",\n  },\n  form: {\n    marginTop: 20,\n  },\n  back: {\n    alignItems: \"flex-start\",\n    marginBottom: 10,\n  },\n\tsignup: {\n\t\tmarginTop: 20,\n\t}\n}));\n\nexport default function FindId() {\n  const classes = useStyles();\n\n  const [mail, setMail] = React.useState(\"\");\n  const [mailAuth, setMailAuth] = React.useState(\"\");\n\n  const [isSendAuthMail, setIsSendAuthMail] = React.useState(false);\n\n  const _onSendAuthMail = () => {\n    setIsSendAuthMail(true);\n  }\n\n  const _onMoveToMailForm = () => {\n    setIsSendAuthMail(false);\n  }\n\n  return (\n    <React.Fragment>\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n        <Typography\n          variant=\"h6\" gutterBottom\n          className={classes.title}>\n            아이디 찾기\n        </Typography>\n          <form\n            noValidate \n            className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid container item xs={12}>\n                {\n                  isSendAuthMail ?\n                    <Grid container item xs={12}>\n                      <Link\n                        component=\"button\"\n                        className={classes.back}\n                        onClick={_onMoveToMailForm}>\n                          뒤로\n                      </Link>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"auth\"\n                        name=\"auth\"\n                        label=\"인증번호\"\n                        value={mailAuth}\n                        onChange={(e) => {setMailAuth(e.target.value)}}\n                      />\n                    </Grid>\n                  :\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      margin=\"dense\"\n                      id=\"mail\"\n                      name=\"mail\"\n                      label=\"가입메일\"\n                      autoComplete=\"mail\"\n                      value={mail}\n                      onChange={(e) => {setMail(e.target.value)}}\n                    />\n                }\n              </Grid>\n              <Grid item xs={12}\n                justify=\"flex-end\"\n                className={classes.signup}>\n                  {\n                    isSendAuthMail ?\n                      <MyButton\n                        color=\"red\"\n                        text=\"인증 완료\"\n                        onClick={() => {\n                          alert(\"인증 완료\");\n                        }}/>\n                    :\n                      <MyButton\n                        color=\"blue\"\n                        text=\"인증번호 받기\"\n                        onClick={_onSendAuthMail}/>\n                    }\n              </Grid>\n          </Grid>\n        </form>\n\t\t\t</Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport MyButton from 'elements/Button/MyButton';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    paddingTop: 20,\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"flex-center\",\n  },\n  form: {\n    marginTop: 20,\n  },\n  context: {\n    textAlign: \"center\",\n    justifyContent: \"flex-center\",\n  },\n\tsignup: {\n\t\tmarginTop: 20,\n\t}\n}));\n\nexport default function FindPw() {\n  const classes = useStyles();\n  \n  const [mail, setMail] = React.useState(\"\");\n  const [id, setId] = React.useState(\"\");\n  const [isSendPasswordMail, setIsSendPasswordMail] = React.useState(false);\n\n  const _onSendAuthMail = () => {\n    setMail(\"\");\n    setId(\"\");\n\n    setIsSendPasswordMail(true);\n  }\n\n  return (\n    <React.Fragment>\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n        <Typography\n          variant=\"h6\" gutterBottom\n          className={classes.title}>\n            비밀번호 찾기\n        </Typography>\n        <form\n          noValidate \n          className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid container item xs={12}\n                className={classes.context}>\n                {\n                  isSendPasswordMail ?\n                    <Grid item xs={12}>\n                      <Typography\n                        variant=\"h5\">\n                        임시 비밀번호 발송 완료\n                      </Typography>\n                    </Grid>\n                  :\n                    <Grid container item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"id\"\n                        name=\"id\"\n                        label=\"아이디\"\n                        autoComplete=\"id\"\n                        value={id}\n                        onChange={(e) => {setId(e.target.value)}}\n                      />\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"mail\"\n                        name=\"mail\"\n                        label=\"가입메일\"\n                        autoComplete=\"mail\"\n                        value={mail}\n                        onChange={(e) => {setMail(e.target.value)}}\n                      />\n                    </Grid>\n                }\n              </Grid>\n              <Grid item xs={12}\n                justify=\"flex-end\"\n                className={classes.signup}>\n                  {\n                    !isSendPasswordMail &&\n                      <MyButton\n                        color=\"blue\"\n                        text=\"임시 비밀번호 발급\"\n                        onClick={_onSendAuthMail}/>\n                  }\n              </Grid>\n          </Grid>\n        </form>\n\t\t\t</Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst NoSignInUser = () => {\n  return (\n    <React.Fragment>\n      <Typography gutterBottom>\n        로그인 된 정보가 없습니다. 로그인 해주세요.\n      </Typography>\n      <Link \n        component=\"button\"\n        variant=\"body2\"\n        onClick={() => document.location.href=\"/signin\"}>\n          로그인하기\n      </Link>\n    </React.Fragment>\n  );\n}\n\nexport default NoSignInUser;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport IUserInfo from 'interfaces/User/IUserInfo';\n\ninterface IProps {\n  userInfo: IUserInfo,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    \n  },\n  form: {\n    marginTop: 10,\n  },\n}));\n\nfunction ViewUserInfo(props: IProps) {\n\n  const classes = useStyles();\n  const userInfo: IUserInfo = props.userInfo;\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}>\n          회원정보\n      </Typography>\n      <Grid container spacing={2}\n        className={classes.form}>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            아이디\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.id}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            이메일\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.mail}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            등급\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.grade}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            포인트\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.point}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            서버\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.server}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            닉네임\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.character}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            인증정보\n          </Grid>\n          <Grid item xs={9}>\n            {\n              userInfo.isAuth \n              ? \"인증\"\n              : \"미인증\"\n            }\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            생성일\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.createDateString}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            인증일\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.authDateString}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  ); \n}\n\nexport default ViewUserInfo;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport MyButton from 'elements/Button/MyButton';\n\nimport SignUp from 'pages/User/SignUp';\n\nimport IUserInfo from 'interfaces/User/IUserInfo';\n\ninterface IProps {\n  userInfo: IUserInfo,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    \n  },\n  form: {\n    marginTop: 10,\n  },\n  text: {\n    margin: \"auto\",\n    verticalAlign: \"middle\"\n  }\n}));\n\nfunction EditUserInfo(props: IProps) {\n\n  const classes = useStyles();\n  const userInfo: IUserInfo = props.userInfo;\n\n  const [isConfirm, setIsConfirm] = React.useState(false);\n  const [server, setServer] = React.useState(props.userInfo.server);\n  const [character, setCharacter] = React.useState(props.userInfo.character);\n  const [password, setPassword] = React.useState(\"\");\n  const [changePassword, setChangePassword] = React.useState(\"\");\n  const [changePasswordConfirm, setChangePasswordConfirm] = React.useState(\"\");\n  \n  const clear = () => {\n    setIsConfirm(false);\n    setServer(props.userInfo.server);\n    setCharacter(props.userInfo.character);\n    setPassword(\"\");\n    setChangePassword(\"\");\n    setChangePasswordConfirm(\"\");\n  }\n\n  const _onEnterPassword = (keyCode: number) => {\n\t\tif (keyCode == 13) {\n\t\t\t_onConfirm();\n\t\t}\n\t}\n  const _onConfirm = () => {\n    setIsConfirm(true);\n  }\n\n  const _onCancle = () => {\n    clear();\n    setIsConfirm(false);\n  }\n\n  const _onSave = () => {\n    //Call function for DB Update User Info \n    alert(\"저장하세용\");\n  }\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}>\n          정보수정\n      </Typography>\n      <Grid container spacing={3}\n        className={classes.form}>\n          {\n            isConfirm ?\n              <React.Fragment>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      아이디\n                  </Grid>\n                  <Grid item xs={9}>\n                    {userInfo.id}\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      이메일\n                  </Grid>\n                  <Grid item xs={9}>\n                    {userInfo.mail}\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      서버\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"server\"\n                      label=\"Server\"\n                      id=\"server\"\n                      value={server}\n                      onChange={(e) => (setServer(e.target.value))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      닉네임\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"character\"\n                      label=\"Character\"\n                      id=\"character\"\n                      value={character}\n                      onChange={(e) => (setCharacter(e.target.value))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                     변경 비밀번호\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      label=\"Password\"\n                      id=\"password\"\n                      type=\"password\"\n                      value={changePassword}\n                      onChange={(e) => (setChangePassword(e.target.value))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      변경 비밀번호 확인\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      error={((changePasswordConfirm !== \"\") && (changePassword !== changePasswordConfirm))}\n                      helperText={(changePasswordConfirm !== \"\") && (changePassword !== changePasswordConfirm) ? \"비밀번호가 일치하지 않습니다.\" : \"\"}\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"passwordConfrim\"\n                      label=\"password Confrim\"\n                      id=\"passwordConfrim\"\n                      type=\"password\"\n                      value={changePasswordConfirm}\n                      onChange={(e) => (setChangePasswordConfirm(e.target.value))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12} spacing={3}>\n                  <Grid item xs={6}>\n                    <MyButton\n                      color=\"red\"\n                      text=\"취소\"\n                      onClick={_onCancle}/>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <MyButton\n                      color=\"blue\"\n                      text=\"저장\"\n                      onClick={_onSave}/>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            :\n              <React.Fragment>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      비밀번호 확인\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      label=\"Password\"\n                      id=\"password\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => (setPassword(e.target.value))}\n                      onKeyUp={(e) => (_onEnterPassword(e.keyCode))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={12}>\n                    <MyButton\n                      color=\"blue\"\n                      text=\"확인\"\n                      onClick={_onConfirm}/>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            }\n      </Grid>\n    </Container>\n  ); \n}\n\nexport default EditUserInfo;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n/* example\n...\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\n-- Close after 4'sec --\n  setOpenSuccessAlert(true);\n  setTimeout(() => setOpenSuccessAlert(false), 4000);\n-- Component --\n  {\n    openSuccessAlert &&\n      <MyAlert\n        isOpen={true}\n        severity=\"success\"\n        duration={4000}\n        text=\"성공 메세지\" />\n  }\n*/\n\ninterface IProps {\n  isOpen: boolean,\n  severity: \"success\" | \"error\" | \"info\" | \"warning\",\n  text: string,\n  duration: number\n}\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function MyAlert(props: IProps) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.isOpen);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar \n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\"}}\n        open={open} \n        autoHideDuration={props.duration} \n        onClose={handleClose}>\n          <Alert onClose={handleClose} severity={props.severity}>\n            {props.text}\n          </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { checkGameUser } from 'utils/UserUtil';\nimport IUserInfo from 'interfaces/User/IUserInfo';\n\nimport MyButton from 'elements/Button/MyButton';\nimport MyAlert from 'elements/Alert/MyAlert';\n\ninterface IProps {\n  userInfo: IUserInfo,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    \n  },\n  form: {\n    marginTop: 10,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst duration = 3000;\n\nfunction AuthUserInfo(props: IProps) {\n\n  const classes = useStyles();\n  const userInfo: IUserInfo = props.userInfo;\n\n  const [isDisabled, setIsDisabled] = React.useState(false);\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\n  const [openErrorAlert, setOpenErrorAlert] = React.useState(false);\n\n  const _onAuthRequest = async () => {\n    setIsDisabled(true);\n\n    const res = await checkGameUser(userInfo.server, userInfo.character);\n    \n    if (res) {\n      // Successed Authentication\n      setOpenSuccessAlert(true);\n      setTimeout(() => setOpenSuccessAlert(false), duration);\n      setTimeout(() => document.location.reload(), duration);\n    }\n    else {\n      // Failed Authentication\n      setOpenErrorAlert(true);\n      setTimeout(()=> {\n        setOpenErrorAlert(false);\n        setIsDisabled(false);\n      }, duration);\n    }\n  }\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}>\n          회원인증\n      </Typography>\n      <Grid container spacing={2}\n        className={classes.form}>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            서버\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.server}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            닉네임\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.character}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            인증정보\n          </Grid>\n          <Grid item xs={9}>\n            {\n              userInfo.isAuth \n              ? \"인증\"\n              : \"미인증\"\n            }\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <MyButton\n            disabled={isDisabled}\n            color=\"blue\"\n            text={isDisabled ? \"인증 중입니다.\" : \"인증신청\"}\n            onClick={_onAuthRequest}/>\n        </Grid>\n      </Grid>\n      <Backdrop className={classes.backdrop} open={isDisabled}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      {\n        openSuccessAlert &&\n          <MyAlert\n            isOpen={true}\n            severity=\"success\"\n            duration={duration}\n            text=\"인증 성공! 잠시 후 회원정보로 이동 됩니다.\" />\n      }\n      {\n        openErrorAlert &&\n          <MyAlert\n            isOpen={true}\n            severity=\"error\"\n            duration={duration}\n            text=\"인증 실패!\" />\n      }\n    </Container>\n  ); \n}\n\nexport default AuthUserInfo;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\n\nimport { getSignInUserId, getUserInfoById } from 'utils/UserUtil';\n\nimport IUserInfo from 'interfaces/User/IUserInfo';\n\nimport NoSignInUser from 'components/User/NoSignInUser';\nimport ViewUserInfo from 'components/User/ViewUserInfo';\nimport EditUserInfo from 'components/User/EditUserInfo';\nimport AuthUserInfo from 'components/User/AuthUserInfo';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 20,\n  },\n  leftSection: {\n  },\n  rightSection: {\n    padding: 10,\n  },\n}));\n\nfunction MyInfo() {\n  const classes = useStyles();\n\n  const userId: string = getSignInUserId();\n  const userInfo: IUserInfo = getUserInfoById(userId);\n\n  const [mode, setMode] = React.useState(\"view\");\n\n  const _onViewUser = () => {\n    setMode(\"view\");\n  }\n\n  const _onEditUser = () => {\n    setMode(\"edit\");\n  }\n\n  const _onAuthUser = () => {\n    setMode(\"auth\");\n  }\n\n  return (\n    <React.Fragment>\n      {\n        userId === \"\" ?\n          <NoSignInUser />\n        :\n        <Container \n          className={classes.root}\n          component=\"main\" \n          maxWidth=\"md\">\n            <Grid container>\n              <Grid item xs={2} className={classes.leftSection}>\n                <MenuList>\n                  <MenuItem onClick={_onViewUser}>회원정보</MenuItem>\n                  <Divider variant=\"middle\"/>\n                  <MenuItem onClick={_onEditUser}>정보수정</MenuItem>\n                  <Divider variant=\"middle\"/>\n                  <MenuItem onClick={_onAuthUser}>회원인증</MenuItem>\n                </MenuList>\n              </Grid>\n              <Divider orientation=\"vertical\" flexItem />\n              <Grid item xs={9} className={classes.rightSection}>\n                {\n                  mode === \"view\" &&\n                    <ViewUserInfo \n                      userInfo={userInfo}/>\n                }\n                {\n                  mode === \"edit\" &&\n                    <EditUserInfo\n                      userInfo={userInfo}/>\n                }\n                {\n                  mode === \"auth\" &&\n                    <AuthUserInfo \n                      userInfo={userInfo}/>\n                }\n              </Grid>\n            </Grid>\n        </Container>\n        \n      }\n    </React.Fragment>\n  )\n}\n\nexport default MyInfo;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"10px\",\n  },\n}));\n\nfunction FreeBoard() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography>\n        자유게시판\n      </Typography>\n      <Link href=\"/board/write\" variant=\"body2\">\n          글쓰기\n      </Link>\n    </React.Fragment>\n  );\n}\n\nexport default FreeBoard;","import React from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'; \n//Quill.register('modules/imageUpload', ImageUpload); // 커스텀 라이브러리를 등록해 준다.\n\ninterface IProps {}\n\ninterface IState {\n  content: string\n}\n\nconst modules = {\n  toolbar: {\n    container: [\n      [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n      [{size: []}],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'},\n      {'indent': '-1'}, {'indent': '+1'}],\n      ['link', 'image', 'video']\n    ],\n    // container:  [['bold', 'italic', 'underline', 'blockquote'],\n    // [{'list': 'ordered'}, {'list': 'bullet'}],\n    // ['formula','link', 'image'],\n    // ['clean']],\n    // handlers: { 'image' : this.handleImage }\n  },\n  /*\n  imageUpload: {\n    url: \"image server url\", // server url\n    method: \"POST\", // change query method, default 'POST'\n    name : 'images', // 아래 설정으로 image upload form의 key 값을 변경할 수 있다.\n    headers: {\n      Authorization: `Bearer tokenValue`, \n      'X-Total-Count': 0,\n    },\n    callbackOK: (serverResponse, next) => { // 성공하면 리턴되는 함수\n        next(serverResponse);\n    },\n    callbackKO: (serverError) => { // 실패하면 리턴되는 함수\n      console.log(serverError);\n        // alert(serverError);\n    },\n    // optional\n    // add callback when a image have been chosen\n    checkBeforeSend: (file, next) => {\n        console.log(file);\n        next(file); // go back to component and send to the server\n    }\n  },\n  */\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n  // imageDrop: true, // imageDrop 등록\n  // imageResize: {} // imageResize 등록\n}\n\nconst formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video'\n]\n\nclass MyTextEditor extends React.Component<IProps, IState>{\n  \n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    }\n  }\n\n  render() {\n\n    const { content } = this.state;\n\n    const _onChangeEditor = (e: any) => {\n      this.setState({\n        content: e,\n      })\n    }\n  \n    return (\n        <div className=\"editor\">\n          <ReactQuill\n            value={content} // state 값\n            theme=\"snow\" // 테마값 이미 snow.css를 로드해서 제거해도 무망\n            onChange={(e) => {_onChangeEditor(e)}}\n            modules={modules}\n            formats={formats}\n            placeholder={'내용을 입력해주세요'}\n          />\n        </div>\n    );\n  }\n}\n\nexport default MyTextEditor;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport MyButton from 'elements/Button/MyButton';\nimport MyTextEditor from 'elements/TextEditor/MyTextEditor';\nimport MyAlert from 'elements/Alert/MyAlert';\n\nimport IPost from 'interfaces/Board/IPost';\n\nimport { CreatePost } from 'utils/PostUtil';\n\nimport * as CommonUtil from 'utils/ComoonUtil';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"10px\",\n  },\n  selector: {\n    minWidth: \"180px\",\n    textAlign: \"center\"\n  },\n  buttonZone: {\n    marginTop: \"10px\"\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst duration = 3000;\n\nfunction PostWrite() {\n  const classes = useStyles();\n\n  const [isDisabled, setIsDisabled] = React.useState(false);\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\n  const [openErrorAlert, setOpenErrorAlert] = React.useState(false);\n  const [openConfirmCancle, setOpenConfirmCancle] = React.useState(false);\n  const [category, setCategory] = React.useState(10);\n  const [title, setTitle] = React.useState(\"\");\n\n  const refTitle = React.useRef<any>();\n\n  const _onChangeCategory = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCategory(event.target.value as number);\n    refTitle.current.focus();\n  }\n\n  const _onCancle = () => {\n    setOpenConfirmCancle(true);\n  }\n\n  const _onWrite = () => {\n    setIsDisabled(true);\n\n    // Processing...\n    const post: IPost = {\n      key: \"9999\",\n      section: \"free\",\n      title: \"title\",\n      content: \"content\",\n      viewCount: 0,\n      writer: {\n        creater: \"sys\",\n        createDateString: CommonUtil.getNowDateString(),\n        editer: \"sys\",\n        lastEditDateString: CommonUtil.getNowDateString(),\n      }\n    }\n\n    const res = CreatePost(post);\n\n    if (res) {\n      // Successed Authentication\n      setOpenSuccessAlert(true);\n      setTimeout(() => setOpenSuccessAlert(false), duration);\n      setTimeout(() => document.location.reload(), duration);\n    }\n    else {\n      // Failed Authentication\n      setOpenErrorAlert(true);\n      setTimeout(()=> {\n        setOpenErrorAlert(false);\n        setIsDisabled(false);\n      }, duration);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Container\n        maxWidth=\"md\"\n        className={classes.root}>\n        <Grid \n          container\n          spacing={1}\n          direction=\"column\"\n          justify=\"flex-start\">\n          <Grid item xs={3}>\n            <Select\n              labelId=\"post-category\"\n              id=\"category\"\n              value={category}\n              onChange={_onChangeCategory}\n              displayEmpty\n              className={classes.selector}>\n                <MenuItem value={10}>자유게시판</MenuItem>\n                <MenuItem value={20}>서버게시판</MenuItem>\n                <MenuItem value={30}>게시판1</MenuItem>\n                <MenuItem value={40}>게시판2</MenuItem>\n            </Select>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              margin=\"dense\"\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              value={title}\n              inputRef={refTitle}\n              onChange={(e) => { setTitle(e.target.value); }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <MyTextEditor/>\n          </Grid>\n          <Grid container item xs={12}\n            justify=\"space-between\"\n            className={classes.buttonZone}>\n              <Grid item xs={3}>\n                <MyButton\n                  color=\"red\"\n                  text=\"취소\"\n                  onClick={_onCancle}/>\n              </Grid>\n              <Grid item xs={3}>\n                <MyButton\n                  color=\"blue\"\n                  text=\"저장\"\n                  onClick={_onWrite}/>\n              </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n      <Backdrop className={classes.backdrop} open={isDisabled}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      {\n        openSuccessAlert &&\n          <MyAlert\n            isOpen={true}\n            severity=\"success\"\n            duration={duration}\n            text=\"작성되었습니다. 잠시 후 게시판으로 이동합니다.\" />\n      }\n      {\n        openErrorAlert &&\n          <MyAlert\n            isOpen={true}\n            severity=\"error\"\n            duration={duration}\n            text=\"작성에 실패하였습니다.\" />\n      }\n      <Dialog\n        open={openConfirmCancle}>\n          <DialogContent>\n            작업한 내용이 사라집니다. \n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={() => {setOpenConfirmCancle(false)}} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => {setOpenConfirmCancle(false)}} color=\"primary\">\n              Ok\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default PostWrite;","import IPost from 'interfaces/Board/IPost';\n\nexport const CreatePost = (post: IPost) => {\n  console.log(post);\n\n  return true;\n}","import { atom } from 'recoil';\n\nconst SearchValueState = atom({\n  key: \"SearchValueState\",\n  default:\"\",\n});\n\nexport default SearchValueState;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { useRecoilState } from 'recoil';\nimport { SearchValueState } from 'state/index';\n\n/*\n* copy code for Get SearchValue on the other component\nimport { useRecoilValue } from 'recoil';\nimport { SearchValueState } from 'state';\n\nconst searchValue = useRecoilValue(SearchValueState);\n*/\nconst MyInputSearch = () => {\n\n  const [searchValue, setSearchValue] = useRecoilState(SearchValueState);\n  \n  const _onChangeSearch = (value: string) => {\n    setSearchValue(value);\n    console.log(\"SEARCH KEYWORD : \", value);\n  }\n  \n  return (\n    <TextField\n      fullWidth\n      size=\"small\"\n      id=\"raidsearch\"\n      name=\"raidsearch\"\n      label=\"검색\"\n      value={searchValue}\n      onChange={(e) => _onChangeSearch(e.target.value)}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n\nexport default MyInputSearch;","import { atom } from 'recoil';\n\nconst TextEditorState = atom({\n  key: \"TextEditorState\",\n  default:\"\",\n});\n\nexport default TextEditorState;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport MyInputSearch from 'elements/Input/MyInputSearch';\nimport IItem from 'interfaces/Dictionary/IItem';\n\nimport { useRecoilValue } from 'recoil';\nimport { SearchValueState } from 'state';\n\nconst useStyles = makeStyles((theme) => ({\n  tabbar: {\n    margin: \"auto\",\n    justifyContent: \"space-between\",\n  },\n  tabs: {\n    margin: \"0 auto\",\n    justifyContent: \"space-between\",\n  },\n  tab: {\n    padding: theme.spacing(1),\n    flexShrink: 2,\n  },\n}));\n\nexport default function FindId() {\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(0);\n\n  const searchValue = useRecoilValue(SearchValueState);\n\n  const tabs: Array<IItem> = [\n    {\n      key: \"01\",\n      title: \"전체\"\n    },\n    {\n      key: \"02\",\n      title: \"목록1\"\n    },\n    {\n      key: \"03\",\n      title: \"목록2\"\n    },\n  ]\n\n  const _onTabsChange = (e: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <React.Fragment>\n\t\t\t<Grid container xs={12} spacing={3}\n        className={classes.tabbar}>\n        <Grid item xs={9}>\n          <Tabs\n            value={value}\n            onChange={_onTabsChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\">\n              {\n                tabs.map((tab: IItem) => {\n                  return (\n                    <Tab\n                      key={tab.key}\n                      className={classes.tab}\n                      label={tab.title}>\n                    </Tab>\n                  );\n                })\n              }\n          </Tabs>\n        </Grid>\n        <Grid item xs={3}>\n          <MyInputSearch />\n        </Grid>\n        <Grid item xs={12}>\n\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import IRaids, { IRaid } from 'interfaces/Dictionary/IRaids';\n\nconst tempRaidList: Array<IRaid> = [\n  {\n    idx: 0,\n    key: \"0101\",\n    name: \"검은용-일반\",\n    limitPower: 17000,\n    limitEnter: \"-\",\n    minPeopleCount: 1,\n    maxPeopleCount: 10,\n    maxEnterCount: \"-\",\n    reward:[\n      {\n        name: \"중국황제\",\n        reward: [\n          {\n            key: \"xx\",\n            title: \"용x노리개\"\n          },\n        ]\n      },\n      {\n        name: \"검은용\",\n        reward: [\n          {\n            key: \"xx\",\n            title: \"흑룡의결정\"\n          },\n          {\n            key: \"xx\",\n            title: \"흑룡의용안\"\n          }\n        ]\n      }\n    ],\n    img: \"blackDragon.png\",\n  },\n  {\n    idx: 1,\n    key: \"0102\",\n    name: \"검은용-심연\",\n    limitPower: 37000,\n    limitEnter: \"-\",\n    minPeopleCount: 1,\n    maxPeopleCount: 4,\n    maxEnterCount: \"-\",\n    reward:[\n      {\n        name: \"검은용\",\n        reward: [\n          {\n            key: \"xx\",\n            title: \"용전설보급품\"\n          },\n          {\n            key: \"xx\",\n            title: \"기술서:검은용의 공포\"\n          }\n        ]\n      }\n    ],\n    img: \"blackDragon.png\",\n  },\n]\n\nconst tempRaidList2: Array<IRaid> = [\n  {\n    idx: 0,\n    key: \"0201\",\n    name: \"구미호\",\n    limitPower: \"-\",\n    limitEnter: \"-\",\n    minPeopleCount: 1,\n    maxPeopleCount: 10,\n    maxEnterCount: 3,\n    reward:[\n      {\n        name: \"구미호\",\n        reward: [\n          {\n            key: \"xx\",\n            title: \"구미호의 영혼(병/갑/투)\"\n          },\n          {\n            key: \"xx\",\n            title: \"전설구미호 무기류\"\n          },\n          {\n            key: \"xx\",\n            title: \"전설구미호 방어구류\"\n          },\n          {\n            key: \"xx\",\n            title: \"순수여우구슬\"\n          },\n          {\n            key: \"xx\",\n            title: \"타락여우구슬\"\n          }\n        ]\n      }\n    ],\n    img: \"blackDragon.png\",\n  },\n]\n\nexport const getDicAllRaidList = () => {\n  const dicRaidList: Array<IRaids> = [];\n  dicRaidList.push({\n    idx: 0,\n    key: \"01\",\n    section: \"section1\",\n    raidInfos: tempRaidList\n  });\n\n  dicRaidList.push({\n    idx: 0,\n    key: \"02\",\n    section: \"section2\",\n    raidInfos: tempRaidList2\n  });\n\n  return dicRaidList;\n}\n\nexport const getDicRaidBykey = (findKey: string) => {\n  let resRaid;\n\n  resRaid = tempRaidList.filter((raid) => raid.key === findKey);\n\n  if (resRaid.length == 0) {\n    resRaid = tempRaidList2.filter((raid) => raid.key === findKey);\n  }\n\n  return resRaid;\n}","import React from 'react';\nimport { makeStyles, withStyles, createStyles, Theme } from '@material-ui/core/styles';\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { getDicAllRaidList } from 'utils/DictionaryUtil';\nimport { getBaseUrlForRaidImg } from 'utils/ConfigUtil';\n\nimport IRaids from 'interfaces/Dictionary/IRaids';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"10px\",\n  },\n  table: {\n    minWidth: 400,\n  },\n  searchContainer: {\n    padding: theme.spacing(0.1),\n  },\n  tableContainer: {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n  },\n  shortImage: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n  },\n}));\n\nconst StyledTableRow = withStyles((theme: Theme) =>\ncreateStyles({\n  root: {\n    backgroundColor: \"#d7ccc8\",\n    '&:nth-of-type(odd)': {\n      backgroundColor: \"#efebe9\",\n    },\n    '&:hover': {\n      backgroundColor: \"#8d6e63\",\n    }\n  },\n}),\n)(TableRow);\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: \"#a1887f\",\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }),\n)(TableCell);\n\nexport default function Raid() {\n  const classes = useStyles();\n  \n  const allRaids: Array<IRaids> = getDicAllRaidList();\n  const baseUrlForRaidImg = getBaseUrlForRaidImg();\n  const _onMoveRaidInfo = (key: string) => {\n    document.location.href=\"/dic/raid/\" + key;\n  }\n\n  return (\n    <React.Fragment>\n      {/*\n      <Grid container spacing={3}\n        direction=\"column\"\n        alignItems=\"flex-end\"\n        className={classes.root}>\n          <Grid item xs={3}>\n            <MyInputSearch /> \n          </Grid>\n          <MyGridDivider/>\n      </Grid>\n      */}\n      {\n        allRaids.map((raids) => {\n          return (\n            <TableContainer component={Paper} className={classes.tableContainer} key={raids.key}>\n              <Table className={classes.table} aria-label={`${raids.section}-table`}>\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell>{raids.section}</StyledTableCell>\n                    <StyledTableCell align=\"left\">레이드명</StyledTableCell>\n                    <StyledTableCell align=\"right\">제한 전투력</StyledTableCell>\n                    <StyledTableCell align=\"right\">제한 인원</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    raids.raidInfos.map((raid) => (\n                      <StyledTableRow key={raid.name}\n                        onClick={() => _onMoveRaidInfo(raid.key)}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            <Avatar src={baseUrlForRaidImg.concat(raid.img)} \n                              className={classes.shortImage}/>\n                          </StyledTableCell>\n                          <StyledTableCell align=\"left\">{raid.name}</StyledTableCell>\n                          <StyledTableCell align=\"right\">{raid.limitPower}</StyledTableCell>\n                          <StyledTableCell align=\"right\">{raid.minPeopleCount} ~ {raid.maxPeopleCount}</StyledTableCell>\n                      </StyledTableRow>\n                    ))\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n          );\n        })\n      }\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getDicRaidBykey } from 'utils/DictionaryUtil';\nimport { getBaseUrlForRaidImg } from 'utils/ConfigUtil';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  image: {\n    width: theme.spacing(30),\n    height: theme.spacing(30),\n  },\n}));\n\nfunction RaidInfo({match}: any) {\n  const classes = useStyles();\n  const { key } = match.params;\n\n  const baseUrlForRaidImg = getBaseUrlForRaidImg();\n  const raid = getDicRaidBykey(key);\n\n  return (\n    <React.Fragment>\n      {\n        raid.length > 0 ?\n          <Container className={classes.root}>\n            <Grid container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\">\n                <Grid item xs={12}>\n                  <Avatar src={baseUrlForRaidImg.concat(raid[0].img)} \n                    className={classes.image}/>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography\n                    variant=\"h5\">\n                    {raid[0].name}\n                  </Typography>\n                </Grid>\n            </Grid>\n          </Container>\n        :\n          <Container>\n            정보가 존재하지 않습니다.\n          </Container>\n      }\n    </React.Fragment>\n  );\n}\n\nexport default RaidInfo;","import React from 'react';\nimport './App.css';\n\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\n\nimport Test from './Test';\n\nimport Header from 'components/Header/Header';\nimport Home from 'pages/Home';\n\nimport SignIn from 'pages/User/SignIn';\nimport SignUp from 'pages/User/SignUp';\nimport FindId from 'pages/User/FindId';\nimport FindPw from 'pages/User/FindPw';\nimport MyInfo from 'pages/User/MyInfo';\n\nimport FreeBoard from 'pages/Board/FreeBoard';\nimport PostWrite from 'pages/Board/PostWrite';\n\nimport Item from 'pages/Dictionary/Item';\nimport Raid from 'pages/Dictionary/Raid';\nimport RaidInfo from 'pages/Dictionary/RaidInfo';\n\n\nfunction App() {\n  return (\n    <Container\n      maxWidth=\"xl\">\n      <React.Fragment>\n        <header>\n          <Container>\n            <Header/>\n          </Container>\n        </header>\n        <main>\n          <Container\n            fixed>\n            <BrowserRouter>\n              {/*Home*/}\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/test\" component={Test}/>\n\n              {/*Common*/}\n              <Route exact path=\"/signin\" component={SignIn}/>\n              <Route exact path=\"/signup\" component={SignUp}/>\n              <Route exact path=\"/findid\" component={FindId}/>\n              <Route exact path=\"/findpw\" component={FindPw}/>\n\n              {/*Board*/}\n              <Route exact path=\"/board/free\" component={FreeBoard}/>\n              <Route exact path=\"/board/write\" component={PostWrite}/>\n              \n              {/*Dictionary*/}\n              <Route path=\"/dic/item\" component={Item}/>\n              <Route exact path=\"/dic/raid\" component={Raid}/>\n              <Route path=\"/dic/raid/:key\" component={RaidInfo}/>\n\n              {/*MyInfo*/}\n              <Route exact path=\"/myinfo\" component={MyInfo}/>\n            </BrowserRouter>\n          </Container>\n        </main>\n      </React.Fragment>\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n  {/*<React.StrictMode>*/}\n    <RecoilRoot>\n      <CssBaseline />\n      <App />\n    </RecoilRoot>\n  {/*</React.StrictMode>,*/}\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}