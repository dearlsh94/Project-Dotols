{"version":3,"sources":["utils/ConfigUtil.tsx","utils/UserUtil.tsx","Test.tsx","components/Header/TopTaps.tsx","elements/Button/MyButton.tsx","pages/Common/SignIn.tsx","components/Header/Header.tsx","components/MainCarousel.tsx","pages/Home.tsx","pages/Common/SignUp.tsx","pages/Common/FindId.tsx","pages/Common/FindPw.tsx","pages/Board/FreeBoard.tsx","elements/TextEditor/MyTextEditor.js","pages/Board/PostWrite.tsx","state/common/SearchValueState.tsx","elements/Input/MyInputSearch.tsx","pages/Dictionary/Item.tsx","utils/DictionaryUtil.tsx","pages/Dictionary/Raid.tsx","pages/Dictionary/RaidInfo.tsx","components/User/NoSignInUser.tsx","components/User/ViewUserInfo.tsx","components/User/EditUserInfo.tsx","elements/Alert/MyAlert.tsx","components/User/AuthUserInfo.tsx","pages/MyPage/MyInfo.tsx","App.tsx","index.tsx"],"names":["getSessionUserInfo","config","sessionUserInfo","getBaseUrlForRaidImg","baseUrlForRaidImg","checkGameUser","server","character","userId","encodeURI","userServer","Promise","resolve","reject","axios","get","then","html","undefined","Error","$txtMessage","cheerio","load","data","$","text","regRes","RegExp","test","console","log","catch","e","useStyles","makeStyles","theme","Test","Fragment","Button","autoFocus","tabIndex","onClick","color","menuTabs","margin","menuTab","paddingLeft","spacing","paddingRight","justifyContent","width","textAlign","tabListItem","alignItems","flexShrink","TopTaps","classes","Menus","menus","Array","map","menu","i","push","getMenus","React","useState","isOpen","setIsOpen","isOpenFixed","setIsOpenFixed","_tabsOpen","_tabsClose","_onTabsEnter","_onTabsLeave","_onMoveMenu","url","document","location","href","Box","Grid","container","direction","justify","className","item","key","idx","onMouseEnter","onMouseLeave","List","ListItem","button","Typography","align","variant","display","title","sub","submenu","sm","IconButton","Divider","root","background","props","border","borderRadius","boxShadow","height","paddingTop","paddingBottom","padding","MyButton","other","fullWidth","AdaptingHook","form","marginTop","signin","SignIn","id","setId","password","setPassword","refId","useRef","refPassword","_onSignIn","length","alert","current","focus","_id","_password","signInUser","token","localStorage","setItem","JSON","stringify","SignInUser","Container","component","maxWidth","noValidate","xs","TextField","required","name","label","autoComplete","value","inputRef","onChange","target","Link","type","onKeyUp","keyCode","toolbar","borderBottom","palette","divider","toolbarleft","toolbarcenter","toolbarTitle","flex","toolbarright","dialogActions","Header","useTheme","fullScreen","useMediaQuery","breakpoints","down","isSignInOpen","setIsSignInOpen","userInfo","getItem","parse","getSignInUser","_onMoveToMain","_onSignInClose","_onMoveSignUp","Toolbar","size","noWrap","removeItem","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","marginLeft","marginRight","gridContainer","cardCarousel","maxHeight","position","flexDirection","minWidth","wordWrap","transition","overflow","gridItem","flexBasis","btnMove","verticalAlign","NextArrow","PrevArrow","MainCarousel","settings","dots","arrows","infinite","autoplay","autoplaySpeed","speed","slidesToShow","slidesToScroll","baseUrlForMainCarousel","refCarousel","createRef","images","slickPrev","ref","image","Card","src","alt","slickNext","Home","state","Component","textButton","signup","SignUp","mode","isEdit","isDisabled","passwordConfirm","setPasswordConfirm","mail","setMail","mailAuth","setMailAuth","isAgree","setIsAgree","isSend","setIsSend","isAuth","setIsAuth","_onClickAuthSend","_onClickAuth","disabled","error","helperText","FormControlLabel","control","Checkbox","checked","signUp","back","marginBottom","FindId","isSendAuthMail","setIsSendAuthMail","gutterBottom","context","FindPw","isSendPasswordMail","setIsSendPasswordMail","FreeBoard","MyTextEditor","editor","ClassicEditor","onInit","event","getData","selector","PostWrite","category","setCategory","setTitle","refTitle","Select","labelId","displayEmpty","MenuItem","SearchValueState","atom","default","MyInputSearch","useRecoilState","searchValue","setSearchValue","InputProps","startAdornment","InputAdornment","tabbar","tabs","tab","setValue","useRecoilValue","Tabs","newValue","indicatorColor","textColor","Tab","tempRaidList","limitPower","limitEnter","minPeopleCount","maxPeopleCount","maxEnterCount","reward","img","tempRaidList2","table","searchContainer","tableContainer","shortImage","StyledTableRow","withStyles","createStyles","backgroundColor","TableRow","StyledTableCell","head","common","white","body","fontSize","TableCell","Raid","allRaids","dicRaidList","section","raidInfos","getDicAllRaidList","raids","TableContainer","Paper","Table","aria-label","TableHead","TableBody","raid","scope","Avatar","concat","RaidInfo","match","params","findKey","resRaid","filter","getDicRaidBykey","NoSignInUser","ViewUserInfo","EditUserInfo","isConfirm","setIsConfirm","setServer","setCharacter","changePassword","setChangePassword","changePasswordConfirm","setChangePasswordConfirm","_onConfirm","Alert","elevation","MyAlert","setOpen","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","duration","severity","backdrop","zIndex","drawer","AuthUserInfo","setIsDisabled","openSuccessAlert","setOpenSuccessAlert","openErrorAlert","setOpenErrorAlert","_onAuthRequest","a","setTimeout","reload","Backdrop","CircularProgress","leftSection","rightSection","MyInfo","getSignInUserId","setMode","MenuList","orientation","flexItem","App","fixed","exact","path","Item","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.d6abb556.chunk.js","sourcesContent":["import config from 'conf/config.json';\n\nimport IMenu from 'interfaces/Common/IMenu';\n\nexport const getSessionUserInfo = () => {\n  return config.sessionUserInfo;\n}\n\nexport const getBaseUrlForMainCarousel = () => {\n  return config.baseUrlForMainCarousel;\n}\n\nexport const getBaseUrlForRaidImg = () => {\n  return config.baseUrlForRaidImg;\n}\n\nexport const getMenus = () => {\n  const menus = Array<IMenu>();\n\n  config.menus.map((menu, i) => {\n    menus.push(menu);\n  });\n  \n  return menus;\n}","import axios from 'axios';\nimport cheerio from 'cheerio';\n\nimport IUserInfo from 'interfaces/Common/IUserInfo';\nimport ISignInUser from 'interfaces/Common/ISignInUser';\nimport { getSessionUserInfo } from './ConfigUtil';\n\nexport const SignInUser = (_id: string, _password: string) => {\n  // Check DB\n\n  // Create SignIn User Info\n  const signInUser: ISignInUser = {\n    id: _id,\n    token: \"\",\n  }\n\n  // Session Store\n  localStorage.setItem(\n    getSessionUserInfo(),\n    JSON.stringify(signInUser)\n  );\n}\n\nexport const getSignInUser = () => {\n  const userInfo = localStorage.getItem(getSessionUserInfo());\n\n  if ( userInfo === null ) {\n    return \"\";\n  }\n\n  const jsonUserInfo = JSON.parse(userInfo);\n\n  const signInUser: ISignInUser = {\n    id: jsonUserInfo.id,\n    token: \"\",\n  }\n  \n  return signInUser;\n}\n\nexport const getSignInUserId = () => {\n  const userInfo = localStorage.getItem(getSessionUserInfo());\n  if ( userInfo === null ) {\n    return \"\";\n  }\n\n  return JSON.parse(userInfo).id;\n}\n\nexport const getUserInfoById = (_id: string) => {\n  const userInfo: IUserInfo = {\n    id: _id,\n    mail: \"mail@mail.net\",\n    server: \"하자\",\n    character: \"협가검\",\n    isAuth: true\n  }\n\n  return userInfo;\n}\n\nexport const LogoutUser = () => {\n  localStorage.removeItem(getSessionUserInfo());\n}\n\nexport const checkGameUser = (server: string, character: string) => {\n\n  const userId = encodeURI(character);\n  const userServer = encodeURI(server);\n  \n  return new Promise((resolve, reject) => {\n    axios.get(`/Profile/Info?character=${userId}%40${userServer}`)\n      .then((html) => {\n        if (html === undefined)\n            throw new Error(\"NO HTML\");\n          \n          const $ = cheerio.load(html.data);\n          const $txtMessage = $(\"textarea\").text();\n\n          const regContainCharacter = new RegExp(character, \"g\");\n\n          const regRes = regContainCharacter.test($txtMessage);\n          console.log(\"REG RESPONSE > \", regRes);\n\n          return regRes;\n      })\n      .then((regRes) => {\n        console.log(\"[TODO] RUN DB PROCESS\");\n\n        resolve(regRes);\n      })\n      .catch((e) => {\n        console.log(\"CHECK GAME USER ERROR > \", e);\n\n        resolve(false);\n      })\n  });\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { checkGameUser } from 'utils/UserUtil';\n\nconst useStyles = makeStyles((theme) => ({\n  \n}));\n\nexport default function Test() {\n  const classes = useStyles();\n\n  const _onTest = () => {\n    checkGameUser(\"하자\", \"협가검\");\n  }\n\n  return (\n    <React.Fragment>\n      <Button \n        autoFocus\n        tabIndex={-1}\n        onClick={_onTest} \n        color=\"primary\">\n          유저조회\n      </Button>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nimport { getMenus } from 'utils/ConfigUtil';\nimport IMenu from 'interfaces/Common/IMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  menuTabs: {\n    margin: \"0 auto\",\n  },\n  menuTab: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    justifyContent: \"space-around\",\n    width: \"13%\",\n    textAlign: \"center\",\n  },\n  tabListItem: {\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    flexShrink: 0,\n  }\n}));\n\nexport default function TopTaps() {\n  const classes = useStyles();\n  \n  const Menus: Array<IMenu> = getMenus();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isOpenFixed, setIsOpenFixed] = React.useState(false);\n\n  const _tabsOpen = () => {\n    setIsOpen(true);\n  }\n  const _tabsClose = () => {\n    setIsOpen(false);\n  }\n\n  const _onTabsEnter = (e: React.MouseEvent<{}>) => {\n    _tabsOpen();\n  }\n  const _onTabsLeave = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    _tabsClose();\n  }\n\n  const _onListItemOpen = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setIsOpenFixed(true);\n    _tabsOpen();\n  }\n  const _onListItemClose = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setIsOpenFixed(false);\n    _tabsClose();\n  }\n\n  const _onMoveMenu = (url: string) => {\n    document.location.href = url;\n  }\n\n  return (\n    <React.Fragment>\n      <Box>\n        <Grid\n          container\n          spacing={0}\n          direction=\"row\"\n          justify=\"center\"\n          className={classes.menuTabs}>\n          {\n            Menus.map((menu: IMenu) => {\n              return(\n                <Grid\n                  item\n                  key={menu.idx}\n                  className={classes.menuTab}\n                  onMouseEnter={_onTabsEnter}\n                  onMouseLeave={_onTabsLeave}>\n                    <List>\n                      <ListItem\n                        key={menu.key}\n                        button\n                        className={classes.tabListItem}\n                        onClick={() => (_onMoveMenu(menu.url))}>\n                          <Typography\n                            align=\"center\"\n                            variant=\"subtitle1\"\n                            display=\"block\">\n                              {menu.title}\n                          </Typography>\n                      </ListItem>\n                      {\n                        (isOpen || isOpenFixed) &&\n                          menu.sub.map((submenu: IMenu) => (\n                            <ListItem\n                              key={submenu.key}\n                              button\n                              className={classes.tabListItem}\n                              onClick={() => (_onMoveMenu(submenu.url))}>\n                                <Typography\n                                  align=\"center\"\n                                  variant=\"subtitle2\"\n                                  display=\"block\">\n                                    {submenu.title}\n                                </Typography>\n                            </ListItem>\n                          ))\n                      }\n                    </List>\n                </Grid>\n              );\n            })\n          }\n          <Grid\n            item\n            sm={1}\n            className={classes.menuTab}>\n            {\n              isOpenFixed ?\n                <IconButton\n                  onClick={_onListItemClose}>\n                  <ExpandLessIcon/>\n                </IconButton>\n              :\n                <IconButton\n                  onClick={_onListItemOpen}>\n                  <ExpandMoreIcon/>\n                </IconButton>\n            }\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider/>\n    </React.Fragment>\n  );\n}\n","import React, { ButtonHTMLAttributes } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\nimport { Omit } from '@material-ui/types';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement>{\n  color: 'red' | 'blue',\n  text?: string,\n}\n\nconst useStyles = makeStyles({\n  root: {\n    background: (props: Props) =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: (props: Props) =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: \"auto\",\n    paddingTop: 4,\n    paddingBottom: 4,\n    padding: '0 50px',\n  },\n});\n\nfunction MyButton(props: Props & Omit<MuiButtonProps, keyof Props>) {\n  const { color, ...other } = props;\n  const classes = useStyles(props);\n  return <Button \n            fullWidth\n            variant=\"contained\"\n            className={classes.root} \n            {...other}/>;\n}\n\nexport default function AdaptingHook(props: Props) {\n  return (\n    <React.Fragment>\n      <MyButton \n        {...props}>\n          {props.text}\n      </MyButton>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nimport MyButton from 'elements/Button/MyButton';\n\nimport { SignInUser } from 'utils/UserUtil';\n\nconst useStyles = makeStyles((theme) => ({\n\tform: {\n\t\tmarginTop: 0,\n\t},\n\tsignin: {\n\t\tmarginTop: 20,\n\t},\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n\tconst [id, setId] = React.useState(\"\");\n\tconst [password, setPassword] = React.useState(\"\");\n\n\tconst refId = React.useRef<any>();\n\tconst refPassword = React.useRef<any>();\n\n\tconst _onEnterPassword = (keyCode: number) => {\n\t\tif (keyCode == 13) {\n\t\t\t_onSignIn();\n\t\t}\n\t}\n\n\tconst _onSignIn = () => {\n\t\tif ( id.length < 1 ) {\n\t\t\talert(\"PLEASE INPUT USER ID\");\n\t\t\trefId.current.focus();\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( password.length < 1 ) {\n\t\t\talert(\"PLEASE INPUT PASSWORD\");\n\t\t\trefPassword.current.focus();\n\n\t\t\treturn false;\n\t\t}\n\n\t\tSignInUser(id, password);\n\n\t\tdocument.location.href=\"/\";\n\t}\n\n  return (\n    <React.Fragment>\n\t\t\t<Container \n\t\t\t\tcomponent=\"main\" \n\t\t\t\tmaxWidth=\"xs\">\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate \n\t\t\t\t\t\tclassName={classes.form}>\n\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User ID\"\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\t\t\t\t\tinputRef={refId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setId(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Link href=\"/findid\" variant=\"body2\" tabIndex={-1}>\n\t\t\t\t\t\t\t\t\t\t\t아이디 찾기\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\tinputRef={refPassword}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) => _onEnterPassword(e.keyCode)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Link href=\"/findpw\" variant=\"body2\" tabIndex={-1}>\n\t\t\t\t\t\t\t\t\t\t\t비밀번호 찾기\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item xs={12}\n\t\t\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t\t\t\tclassName={classes.signin}>\n\t\t\t\t\t\t\t\t\t<MyButton\n\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\t\ttext=\"로그인\"\n\t\t\t\t\t\t\t\t\t\tonClick={_onSignIn}/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t</Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\n\nimport TopTaps from 'components/Header/TopTaps';\nimport SignIn from 'pages/Common/SignIn';\n\nimport { getSignInUser, LogoutUser } from 'utils/UserUtil';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarleft: {\n    textAlign: \"left\",\n  },\n  toolbarcenter: {\n    textAlign: \"center\"\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarright: {\n    textAlign: \"right\",\n  },\n  dialogActions: {\n    justifyContent: \"space-between\"\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const [isSignInOpen, setIsSignInOpen] = React.useState(false);\n\n  const userInfo = getSignInUser();\n  console.log(userInfo);\n\n  const _onMoveToMain = () => {\n    document.location.href = \"/\";\n  }\n\n  const _onSignInOpen = () => {\n    setIsSignInOpen(true);\n  };\n\n  const _onSignInClose = () => {\n    setIsSignInOpen(false);\n  };\n\n  const _onMoveSignUp = () => {\n    document.location.href = \"/signup\";\n  }\n\n  const _onLogoutUser = () => {\n    LogoutUser();\n    \n    _onMoveToMain();\n  }\n\n  return (\n    <React.Fragment>\n      <React.Fragment>\n        <nav>\n          <Toolbar \n            className={classes.toolbar}>\n            <Grid container item xs={12}>\n              <Grid item xs={3}\n                className={classes.toolbarleft}>                  \n                <Button \n                  size=\"small\">\n                    Subscribe\n                </Button>\n              </Grid>\n              <Grid item xs={6}>                  \n                <Typography\n                  component=\"h2\"\n                  variant=\"h5\"\n                  color=\"inherit\"\n                  align=\"center\"\n                  noWrap\n                  className={classes.toolbarTitle}\n                  onClick={_onMoveToMain}\n                >\n                  logo\n                </Typography>\n              </Grid>\n              <Grid item xs={3}\n                className={classes.toolbarright}>\n                  {\n                    userInfo === \"\" ?\n                      <Container>\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\"\n                          onClick={_onSignInOpen}>\n                            SignIn\n                        </Button>\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\"\n                          onClick={_onMoveSignUp}\n                        >\n                          SignUp\n                        </Button>\n                      </Container>\n                    :\n                      <Button \n                        variant=\"outlined\" \n                        size=\"small\"\n                        onClick={_onLogoutUser}>\n                         Logout\n                      </Button>\n                  }               \n              </Grid>\n            </Grid>\n          </Toolbar>\n        </nav>\n        <aside>\n          <Box>\n            <TopTaps/>\n          </Box>\n        </aside>\n      </React.Fragment>\n      <Dialog\n        fullScreen={fullScreen}\n        open={isSignInOpen}\n        onClose={_onSignInClose}\n        aria-labelledby=\"responsive-dialog-title\">\n          <DialogTitle \n            id=\"responsive-dialog-title\">\n              {\"로그인\"}\n          </DialogTitle>\n          <DialogContent>\n            {/*\n            <DialogContentText>\n              Blah Blah ~~~~ \n            </DialogContentText>\n            */}\n            <SignIn/>\n          </DialogContent>\n          <DialogActions\n            className={classes.dialogActions}>\n            <Button \n              autoFocus \n              tabIndex={-1}\n              onClick={_onMoveSignUp} \n              color=\"primary\">\n                회원가입\n            </Button>\n            <Button \n              autoFocus\n              tabIndex={-1}\n              onClick={_onSignInClose} \n              color=\"primary\">\n                닫기\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport Carousel from \"react-slick\";\nimport { getBaseUrlForMainCarousel } from 'utils/ConfigUtil';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: \"5 0\",\n    width: \"100%\",\n    height: \"auto\",\n    marginLeft: \"auto !important\",\n    marginRight: \"auto !important\",\n  },\n  gridContainer: {\n    marginTop: \"15px\",\n    marginRight: \"-15px\",\n    marginLeft: \"-15px\",\n    width: \"auto\"\n  },\n  cardCarousel: {\n    border: \"0\",\n    borderRadius: \"6px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#fff\",\n    width: \"100%\",\n    maxHeight: \"300px\",\n    boxShadow:\n      \"0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    transition: \"all 300ms linear\",\n    overflow: \"hidden\"\n  },\n  gridItem: {\n    position: \"relative\",\n    width: \"100%\",\n    flexBasis: \"auto\",\n  },\n  btnMove: {\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    verticalAlign: \"middle\",\n  }\n}));\n\nfunction NextArrow(props: any) {\n  const { onClick } = props;\n  return (\n    <IconButton\n      onClick={onClick}>\n        <ArrowForwardIosIcon/>\n    </IconButton>\n  );\n}\n\nfunction PrevArrow(props: any) {\n  const { onClick } = props;\n  return (\n    <IconButton\n      onClick={onClick}>\n        <ArrowBackIosIcon/>\n    </IconButton>\n  );\n}\n\nexport default function MainCarousel() {\n  const classes = useStyles();\n  const settings = {\n    dots: true,\n    arrows: true,\n    infinite: true,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    NextArrow: <NextArrow />,\n    PrevArrow: <PrevArrow />\n  };\n\n  const baseUrlForMainCarousel = getBaseUrlForMainCarousel();\n\n  //creating the ref\n  const refCarousel: React.RefObject<Carousel> = React.createRef();\n\n  const images = [];\n  images.push(\"bg1.jpg\");\n  images.push(\"bg2.jpg\");\n  images.push(\"bg3.jpg\");\n\n  return (\n    <Container\n      className={classes.container}>\n      <Grid container className={classes.gridContainer}>\n        <Grid item xs={1} className={classes.btnMove}>\n          <IconButton\n            onClick={() => refCarousel.current?.slickPrev()}>\n              <ArrowBackIosIcon/>\n          </IconButton>\n        </Grid>\n        <Grid item xs={10} className={classes.gridItem}>\n            <Carousel ref={refCarousel}\n              {...settings}>\n              {\n                images.map((image, i) => (\n                  <Card className={classes.cardCarousel} key={image}>\n                      <img src={baseUrlForMainCarousel + image} alt={\"slide_\" + i} className=\"slick-image\" />\n                  </Card>\n                ))\n              }\n            </Carousel>\n        </Grid>\n        <Grid item xs={1} className={classes.btnMove}>\n          <IconButton\n            onClick={() => refCarousel.current?.slickNext()}>\n              <ArrowForwardIosIcon/>\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}","import React, {Component} from 'react';\n\nimport MainCarousel from 'components/MainCarousel';\n\ninterface IProps {\n\n}\n\ninterface IState {\n    menu: \"menu1\" | \"menu2\"\n}\n\nclass Home extends Component <IProps, IState>{\n\n\tconstructor(props: IProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmenu: \"menu1\"\n\t\t}\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<MainCarousel/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nimport ISignUpUser from 'interfaces/Common/ISignUpUser';\n\nimport MyButton from 'elements/Button/MyButton';\n\nconst useStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tmarginTop: 10,\n\t\ttextAlign: \"center\",\n\t},\n\tform: {\n\t\tmarginTop: 20,\n\t},\n\ttextButton: {\n\t\talignItems: \"center\"\n\t},\n\tsignup: {\n\t\tmarginTop: 20,\n\t}\n}));\n\ninterface IProps{\n\tmode: \"create\" | \"edit\"\n}\n\ninterface IState{\n\tid: string,\n\tpassword: string,\n\tpasswordConfirm: string,\n\tmail: string,\n\tmailAuth: string,\n}\n\nexport default function SignUp(props: IProps) {\n\tconst classes = useStyles();\n\t\n\tconst [isEdit, setIsEdit] = React.useState(props.mode === \"edit\" ? true : false);\n\tconst [isDisabled, setIsDisabled] = React.useState(isEdit);\n\tconst [id, setId] = React.useState(\"\");\n\tconst [password, setPassword] = React.useState(\"\");\n\tconst [passwordConfirm, setPasswordConfirm] = React.useState(\"\");\n\tconst [mail, setMail] = React.useState(\"\");\n\tconst [mailAuth, setMailAuth] = React.useState(\"\");\n\tconst [isAgree, setIsAgree] = React.useState(false);\n\n\tconst [isSend, setIsSend] = React.useState(false);\n\tconst [isAuth, setIsAuth] = React.useState(false);\n\n\tconst _onEnterMail = (keyCode: number) => {\n\t\tif (keyCode == 13) {\n\t\t\t_onClickAuthSend();\n\t\t}\n\t}\n\tconst _onClickAuthSend = () => {\n\t\tif (password !== passwordConfirm) {\n\t\t\talert(\"비밀번호를 확인해주세요\");\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tsetIsSend(true);\n\t}\n\t\n\tconst _onEnterMailAuth = (keyCode: number) => {\n\t\tif (keyCode == 13) {\n\t\t\t_onClickAuth();\n\t\t}\n\t}\n\tconst _onClickAuth = () => {\n\t\tsetIsAuth(true);\n\t}\n\n\tconst _onClickSignUp = () => {\n\t\tif (!isAgree) {\n\t\t\talert(\"동의 후 진행가능합니다.\");\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst signUp: ISignUpUser = {\n\t\t\tid: id,\n\t\t\tpassword: password,\n\t\t\tmail: mail,\n\t\t};\n\n\t\tconsole.log(\"SIGN UP USER INFO >>> \" , signUp);\n\t}\n\n  return (\n    <React.Fragment>\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<Typography \n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tcomponent=\"h1\" \n\t\t\t\t\tvariant=\"h5\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isEdit &&\n\t\t\t\t\t\t\t\t\"Sign Up\"\n\t\t\t\t\t\t}\n\t\t\t\t</Typography>\n\t\t\t\t\t{\n\t\t\t\t\t\t!isSend &&\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User ID\"\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setId(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setPassword(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\terror={((passwordConfirm !== \"\") && (password !== passwordConfirm))}\n\t\t\t\t\t\t\t\t\t\t\thelperText={(passwordConfirm !== \"\") && (password !== passwordConfirm) ? \"비밀번호가 일치하지 않습니다.\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"passwordConfrim\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"password Confrim\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"passwordConfrim\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setPasswordConfirm(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"mail\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"mail\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={mail}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setMail(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) => _onEnterMail(e.keyCode)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textButton}\n\t\t\t\t\t\t\t\t\t\t\tonClick={_onClickAuthSend}>\n\t\t\t\t\t\t\t\t\t\t\t\t인증요청\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\t(isSend && !isAuth) &&\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"mailAuth\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Authentication Code\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"mailAuth\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={mailAuth}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => (setMailAuth(e.target.value))}\n\t\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) => _onEnterMailAuth(e.keyCode)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textButton}\n\t\t\t\t\t\t\t\t\t\t\tonClick={_onClickAuth}>\n\t\t\t\t\t\t\t\t\t\t\t\t인증확인\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\t(isSend && isAuth) &&\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t(isAuth) &&\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t인증방식 설명\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"allowExtraEmails\" \n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\" \n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={isAgree}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(() => {setIsAgree(!isAgree)})}/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"내용을 다 읽고 이해하였습니다.\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid \n\t\t\t\t\t\t\t\t\t\tcontainer \n\t\t\t\t\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.signup}>\n\t\t\t\t\t\t\t\t\t\t\t<MyButton\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"blue\"\n\t\t\t\t\t\t\t\t\t\t\t\ttext=\"SIGN UP\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={_onClickSignUp}/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t</Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport MyButton from 'elements/Button/MyButton';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    paddingTop: 20,\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"flex-center\",\n  },\n  form: {\n    marginTop: 20,\n  },\n  back: {\n    alignItems: \"flex-start\",\n    marginBottom: 10,\n  },\n\tsignup: {\n\t\tmarginTop: 20,\n\t}\n}));\n\nexport default function FindId() {\n  const classes = useStyles();\n\n  const [mail, setMail] = React.useState(\"\");\n  const [mailAuth, setMailAuth] = React.useState(\"\");\n\n  const [isSendAuthMail, setIsSendAuthMail] = React.useState(false);\n\n  const _onSendAuthMail = () => {\n    setIsSendAuthMail(true);\n  }\n\n  const _onMoveToMailForm = () => {\n    setIsSendAuthMail(false);\n  }\n\n  return (\n    <React.Fragment>\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n        <Typography\n          variant=\"h6\" gutterBottom\n          className={classes.title}>\n            아이디 찾기\n        </Typography>\n          <form\n            noValidate \n            className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid container item xs={12}>\n                {\n                  isSendAuthMail ?\n                    <Grid container item xs={12}>\n                      <Link\n                        component=\"button\"\n                        className={classes.back}\n                        onClick={_onMoveToMailForm}>\n                          뒤로\n                      </Link>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"auth\"\n                        name=\"auth\"\n                        label=\"인증번호\"\n                        value={mailAuth}\n                        onChange={(e) => {setMailAuth(e.target.value)}}\n                      />\n                    </Grid>\n                  :\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      margin=\"dense\"\n                      id=\"mail\"\n                      name=\"mail\"\n                      label=\"가입메일\"\n                      autoComplete=\"mail\"\n                      value={mail}\n                      onChange={(e) => {setMail(e.target.value)}}\n                    />\n                }\n              </Grid>\n              <Grid item xs={12}\n                justify=\"flex-end\"\n                className={classes.signup}>\n                  {\n                    isSendAuthMail ?\n                      <MyButton\n                        color=\"red\"\n                        text=\"인증 완료\"\n                        onClick={() => {\n                          alert(\"인증 완료\");\n                        }}/>\n                    :\n                      <MyButton\n                        color=\"blue\"\n                        text=\"인증번호 받기\"\n                        onClick={_onSendAuthMail}/>\n                    }\n              </Grid>\n          </Grid>\n        </form>\n\t\t\t</Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport MyButton from 'elements/Button/MyButton';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    paddingTop: 20,\n    margin: \"auto\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"flex-center\",\n  },\n  form: {\n    marginTop: 20,\n  },\n  context: {\n    textAlign: \"center\",\n    justifyContent: \"flex-center\",\n  },\n\tsignup: {\n\t\tmarginTop: 20,\n\t}\n}));\n\nexport default function FindPw() {\n  const classes = useStyles();\n  \n  const [mail, setMail] = React.useState(\"\");\n  const [id, setId] = React.useState(\"\");\n  const [isSendPasswordMail, setIsSendPasswordMail] = React.useState(false);\n\n  const _onSendAuthMail = () => {\n    setMail(\"\");\n    setId(\"\");\n\n    setIsSendPasswordMail(true);\n  }\n\n  return (\n    <React.Fragment>\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n        <Typography\n          variant=\"h6\" gutterBottom\n          className={classes.title}>\n            비밀번호 찾기\n        </Typography>\n        <form\n          noValidate \n          className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid container item xs={12}\n                className={classes.context}>\n                {\n                  isSendPasswordMail ?\n                    <Grid item xs={12}>\n                      <Typography\n                        variant=\"h5\">\n                        임시 비밀번호 발송 완료\n                      </Typography>\n                    </Grid>\n                  :\n                    <Grid container item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"id\"\n                        name=\"id\"\n                        label=\"아이디\"\n                        autoComplete=\"id\"\n                        value={id}\n                        onChange={(e) => {setId(e.target.value)}}\n                      />\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"mail\"\n                        name=\"mail\"\n                        label=\"가입메일\"\n                        autoComplete=\"mail\"\n                        value={mail}\n                        onChange={(e) => {setMail(e.target.value)}}\n                      />\n                    </Grid>\n                }\n              </Grid>\n              <Grid item xs={12}\n                justify=\"flex-end\"\n                className={classes.signup}>\n                  {\n                    !isSendPasswordMail &&\n                      <MyButton\n                        color=\"blue\"\n                        text=\"임시 비밀번호 발급\"\n                        onClick={_onSendAuthMail}/>\n                  }\n              </Grid>\n          </Grid>\n        </form>\n\t\t\t</Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"10px\",\n  },\n}));\n\nfunction FreeBoard() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography>\n        자유게시판\n      </Typography>\n      <Link href=\"/board/write\" variant=\"body2\">\n          글쓰기\n      </Link>\n    </React.Fragment>\n  );\n}\n\nexport default FreeBoard;","import React from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nclass MyTextEditor extends React.Component{\n\n  componentWillMount() {\n    \n  }\n  render() {\n    return (\n        <div className=\"App\">\n            <h2>Using CKEditor 5 build in React</h2>\n            <CKEditor\n                editor={ ClassicEditor }\n                data=\"<p>Hello from CKEditor 5!</p>\"\n                onInit={ editor => {\n                    // You can store the \"editor\" and use when it is needed.\n                    console.log( 'Editor is ready to use!', editor );\n                } }\n                onChange={ ( event, editor ) => {\n                    const data = editor.getData();\n                    console.log( { event, editor, data } );\n                } }\n            />\n        </div>\n    );\n}\n}\n\nexport default MyTextEditor;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport MyTextEditor from 'elements/TextEditor/MyTextEditor';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"10px\",\n  },\n  selector: {\n    minWidth: \"180px\",\n    textAlign: \"center\"\n  }\n}));\n\nfunction PostWrite() {\n  const classes = useStyles();\n\n  const [category, setCategory] = React.useState(10);\n  const [title, setTitle] = React.useState(\"\");\n\n  const refTitle = React.useRef<any>();\n\n  const _onChangeCategory = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCategory(event.target.value as number);\n    refTitle.current.focus();\n  }\n\n  return (\n    <React.Fragment>\n      <Container\n        maxWidth=\"md\">\n        <Grid \n          container\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"center\">\n            <Grid container item xs={12}>\n              <Grid item xs={3}>\n                <Select\n                  labelId=\"post-category\"\n                  id=\"category\"\n                  value={category}\n                  onChange={_onChangeCategory}\n                  displayEmpty\n                  className={classes.selector}>\n                    <MenuItem value={10}>자유게시판</MenuItem>\n                    <MenuItem value={20}>서버게시판</MenuItem>\n                    <MenuItem value={30}>게시판1</MenuItem>\n                    <MenuItem value={40}>게시판2</MenuItem>\n                </Select>\n              </Grid>\n              <Grid item xs={9}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  margin=\"dense\"\n                  id=\"title\"\n                  name=\"title\"\n                  label=\"Title\"\n                  value={title}\n                  inputRef={refTitle}\n                  onChange={(e) => { setTitle(e.target.value); }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <MyTextEditor/>\n              </Grid>\n            </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default PostWrite;","import { atom } from 'recoil';\n\nconst SearchValueState = atom({\n  key: \"SearchValueState\",\n  default:\"\",\n});\n\nexport default SearchValueState;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { useRecoilState } from 'recoil';\nimport { SearchValueState } from 'state/index';\n\n/*\n* copy code for Get SearchValue on the other component\nimport { useRecoilValue } from 'recoil';\nimport { SearchValueState } from 'state';\n\nconst searchValue = useRecoilValue(SearchValueState);\n*/\nconst MyInputSearch = () => {\n\n  const [searchValue, setSearchValue] = useRecoilState(SearchValueState);\n  \n  const _onChangeSearch = (value: string) => {\n    setSearchValue(value);\n    console.log(\"SEARCH KEYWORD : \", value);\n  }\n  \n  return (\n    <TextField\n      fullWidth\n      size=\"small\"\n      id=\"raidsearch\"\n      name=\"raidsearch\"\n      label=\"검색\"\n      value={searchValue}\n      onChange={(e) => _onChangeSearch(e.target.value)}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n\nexport default MyInputSearch;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport MyInputSearch from 'elements/Input/MyInputSearch';\nimport IItem from 'interfaces/Dictionary/IItem';\n\nimport { useRecoilValue } from 'recoil';\nimport { SearchValueState } from 'state';\n\nconst useStyles = makeStyles((theme) => ({\n  tabbar: {\n    margin: \"auto\",\n    justifyContent: \"space-between\",\n  },\n  tabs: {\n    margin: \"0 auto\",\n    justifyContent: \"space-between\",\n  },\n  tab: {\n    padding: theme.spacing(1),\n    flexShrink: 2,\n  },\n}));\n\nexport default function FindId() {\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(0);\n\n  const searchValue = useRecoilValue(SearchValueState);\n\n  const tabs: Array<IItem> = [\n    {\n      key: \"01\",\n      title: \"전체\"\n    },\n    {\n      key: \"02\",\n      title: \"목록1\"\n    },\n    {\n      key: \"03\",\n      title: \"목록2\"\n    },\n  ]\n\n  const _onTabsChange = (e: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <React.Fragment>\n\t\t\t<Grid container xs={12} spacing={3}\n        className={classes.tabbar}>\n        <Grid item xs={9}>\n          <Tabs\n            value={value}\n            onChange={_onTabsChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\">\n              {\n                tabs.map((tab: IItem) => {\n                  return (\n                    <Tab\n                      key={tab.key}\n                      className={classes.tab}\n                      label={tab.title}>\n                    </Tab>\n                  );\n                })\n              }\n          </Tabs>\n        </Grid>\n        <Grid item xs={3}>\n          <MyInputSearch />\n        </Grid>\n        <Grid item xs={12}>\n\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import IRaids, { IRaid } from 'interfaces/Dictionary/IRaids';\n\nconst tempRaidList: Array<IRaid> = [\n  {\n    idx: 0,\n    key: \"0101\",\n    name: \"검은용-일반\",\n    limitPower: 17000,\n    limitEnter: \"-\",\n    minPeopleCount: 1,\n    maxPeopleCount: 10,\n    maxEnterCount: \"-\",\n    reward:[\n      {\n        name: \"중국황제\",\n        reward: [\n          {\n            key: \"xx\",\n            title: \"용x노리개\"\n          },\n        ]\n      },\n      {\n        name: \"검은용\",\n        reward: [\n          {\n            key: \"xx\",\n            title: \"흑룡의결정\"\n          },\n          {\n            key: \"xx\",\n            title: \"흑룡의용안\"\n          }\n        ]\n      }\n    ],\n    img: \"blackDragon.png\",\n  },\n  {\n    idx: 1,\n    key: \"0102\",\n    name: \"검은용-심연\",\n    limitPower: 37000,\n    limitEnter: \"-\",\n    minPeopleCount: 1,\n    maxPeopleCount: 4,\n    maxEnterCount: \"-\",\n    reward:[\n      {\n        name: \"검은용\",\n        reward: [\n          {\n            key: \"xx\",\n            title: \"용전설보급품\"\n          },\n          {\n            key: \"xx\",\n            title: \"기술서:검은용의 공포\"\n          }\n        ]\n      }\n    ],\n    img: \"blackDragon.png\",\n  },\n]\n\nconst tempRaidList2: Array<IRaid> = [\n  {\n    idx: 0,\n    key: \"0201\",\n    name: \"구미호\",\n    limitPower: \"-\",\n    limitEnter: \"-\",\n    minPeopleCount: 1,\n    maxPeopleCount: 10,\n    maxEnterCount: 3,\n    reward:[\n      {\n        name: \"구미호\",\n        reward: [\n          {\n            key: \"xx\",\n            title: \"구미호의 영혼(병/갑/투)\"\n          },\n          {\n            key: \"xx\",\n            title: \"전설구미호 무기류\"\n          },\n          {\n            key: \"xx\",\n            title: \"전설구미호 방어구류\"\n          },\n          {\n            key: \"xx\",\n            title: \"순수여우구슬\"\n          },\n          {\n            key: \"xx\",\n            title: \"타락여우구슬\"\n          }\n        ]\n      }\n    ],\n    img: \"blackDragon.png\",\n  },\n]\n\nexport const getDicAllRaidList = () => {\n  const dicRaidList: Array<IRaids> = [];\n  dicRaidList.push({\n    idx: 0,\n    key: \"01\",\n    section: \"section1\",\n    raidInfos: tempRaidList\n  });\n\n  dicRaidList.push({\n    idx: 0,\n    key: \"02\",\n    section: \"section2\",\n    raidInfos: tempRaidList2\n  });\n\n  return dicRaidList;\n}\n\nexport const getDicRaidBykey = (findKey: string) => {\n  let resRaid;\n\n  resRaid = tempRaidList.filter((raid) => raid.key === findKey);\n\n  if (resRaid.length == 0) {\n    resRaid = tempRaidList2.filter((raid) => raid.key === findKey);\n  }\n\n  return resRaid;\n}","import React from 'react';\nimport { makeStyles, withStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { getDicAllRaidList } from 'utils/DictionaryUtil';\nimport { getBaseUrlForRaidImg } from 'utils/ConfigUtil';\n\nimport IRaids from 'interfaces/Dictionary/IRaids';\nimport MyInputSearch from 'elements/Input/MyInputSearch';\nimport MyGridDivider from 'elements/Grid/MyGridDivider';\n\nimport { useRecoilValue } from 'recoil';\nimport { SearchValueState } from 'state';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"10px\",\n  },\n  table: {\n    minWidth: 400,\n  },\n  searchContainer: {\n    padding: theme.spacing(0.1),\n  },\n  tableContainer: {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n  },\n  shortImage: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n  },\n}));\n\nconst StyledTableRow = withStyles((theme: Theme) =>\ncreateStyles({\n  root: {\n    backgroundColor: \"#d7ccc8\",\n    '&:nth-of-type(odd)': {\n      backgroundColor: \"#efebe9\",\n    },\n    '&:hover': {\n      backgroundColor: \"#8d6e63\",\n    }\n  },\n}),\n)(TableRow);\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: \"#a1887f\",\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }),\n)(TableCell);\n\nexport default function Raid() {\n  const classes = useStyles();\n  \n  const allRaids: Array<IRaids> = getDicAllRaidList();\n  const baseUrlForRaidImg = getBaseUrlForRaidImg();\n  const _onMoveRaidInfo = (key: string) => {\n    document.location.href=\"/dic/raid/\" + key;\n  }\n\n  return (\n    <React.Fragment>\n      {/*\n      <Grid container spacing={3}\n        direction=\"column\"\n        alignItems=\"flex-end\"\n        className={classes.root}>\n          <Grid item xs={3}>\n            <MyInputSearch /> \n          </Grid>\n          <MyGridDivider/>\n      </Grid>\n      */}\n      {\n        allRaids.map((raids) => {\n          return (\n            <TableContainer component={Paper} className={classes.tableContainer} key={raids.key}>\n              <Table className={classes.table} aria-label={`${raids.section}-table`}>\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell>{raids.section}</StyledTableCell>\n                    <StyledTableCell align=\"left\">레이드명</StyledTableCell>\n                    <StyledTableCell align=\"right\">제한 전투력</StyledTableCell>\n                    <StyledTableCell align=\"right\">제한 인원</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    raids.raidInfos.map((raid) => (\n                      <StyledTableRow key={raid.name}\n                        onClick={() => _onMoveRaidInfo(raid.key)}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            <Avatar src={baseUrlForRaidImg.concat(raid.img)} \n                              className={classes.shortImage}/>\n                          </StyledTableCell>\n                          <StyledTableCell align=\"left\">{raid.name}</StyledTableCell>\n                          <StyledTableCell align=\"right\">{raid.limitPower}</StyledTableCell>\n                          <StyledTableCell align=\"right\">{raid.minPeopleCount} ~ {raid.maxPeopleCount}</StyledTableCell>\n                      </StyledTableRow>\n                    ))\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n          );\n        })\n      }\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getDicRaidBykey } from 'utils/DictionaryUtil';\nimport { getBaseUrlForRaidImg } from 'utils/ConfigUtil';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  image: {\n    width: theme.spacing(30),\n    height: theme.spacing(30),\n  },\n}));\n\nfunction RaidInfo({match}: any) {\n  const classes = useStyles();\n  const { key } = match.params;\n\n  const baseUrlForRaidImg = getBaseUrlForRaidImg();\n  const raid = getDicRaidBykey(key);\n\n  return (\n    <React.Fragment>\n      {\n        raid.length > 0 ?\n          <Container className={classes.root}>\n            <Grid container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\">\n                <Grid item xs={12}>\n                  <Avatar src={baseUrlForRaidImg.concat(raid[0].img)} \n                    className={classes.image}/>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography\n                    variant=\"h5\">\n                    {raid[0].name}\n                  </Typography>\n                </Grid>\n            </Grid>\n          </Container>\n        :\n          <Container>\n            정보가 존재하지 않습니다.\n          </Container>\n      }\n    </React.Fragment>\n  );\n}\n\nexport default RaidInfo;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst NoSignInUser = () => {\n  return (\n    <React.Fragment>\n      <Typography gutterBottom>\n        로그인 된 정보가 없습니다. 로그인 해주세요.\n      </Typography>\n      <Link \n        component=\"button\"\n        variant=\"body2\"\n        onClick={() => document.location.href=\"/signin\"}>\n          로그인하기\n      </Link>\n    </React.Fragment>\n  );\n}\n\nexport default NoSignInUser;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport IUserInfo from 'interfaces/Common/IUserInfo';\n\ninterface IProps {\n  userInfo: IUserInfo,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    \n  },\n  form: {\n    marginTop: 10,\n  },\n}));\n\nfunction ViewUserInfo(props: IProps) {\n\n  const classes = useStyles();\n  const userInfo: IUserInfo = props.userInfo;\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}>\n          회원정보\n      </Typography>\n      <Grid container spacing={2}\n        className={classes.form}>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            아이디\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.id}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            이메일\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.mail}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            서버\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.server}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            닉네임\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.character}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            인증정보\n          </Grid>\n          <Grid item xs={9}>\n            {\n              userInfo.isAuth \n              ? \"인증\"\n              : \"미인증\"\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  ); \n}\n\nexport default ViewUserInfo;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport MyButton from 'elements/Button/MyButton';\nimport SignUp from 'pages/Common/SignUp';\nimport IUserInfo from 'interfaces/Common/IUserInfo';\n\ninterface IProps {\n  userInfo: IUserInfo,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    \n  },\n  form: {\n    marginTop: 10,\n  },\n  text: {\n    margin: \"auto\",\n    verticalAlign: \"middle\"\n  }\n}));\n\nfunction EditUserInfo(props: IProps) {\n\n  const classes = useStyles();\n  const userInfo: IUserInfo = props.userInfo;\n\n  const [isConfirm, setIsConfirm] = React.useState(false);\n  const [server, setServer] = React.useState(props.userInfo.server);\n  const [character, setCharacter] = React.useState(props.userInfo.character);\n  const [password, setPassword] = React.useState(\"\");\n  const [changePassword, setChangePassword] = React.useState(\"\");\n  const [changePasswordConfirm, setChangePasswordConfirm] = React.useState(\"\");\n  \n  const clear = () => {\n    setIsConfirm(false);\n    setServer(props.userInfo.server);\n    setCharacter(props.userInfo.character);\n    setPassword(\"\");\n    setChangePassword(\"\");\n    setChangePasswordConfirm(\"\");\n  }\n\n  const _onEnterPassword = (keyCode: number) => {\n\t\tif (keyCode == 13) {\n\t\t\t_onConfirm();\n\t\t}\n\t}\n  const _onConfirm = () => {\n    setIsConfirm(true);\n  }\n\n  const _onCancle = () => {\n    clear();\n    setIsConfirm(false);\n  }\n\n  const _onSave = () => {\n    //Call function for DB Update User Info \n    alert(\"저장하세용\");\n  }\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}>\n          정보수정\n      </Typography>\n      <Grid container spacing={3}\n        className={classes.form}>\n          {\n            isConfirm ?\n              <React.Fragment>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      아이디\n                  </Grid>\n                  <Grid item xs={9}>\n                    {userInfo.id}\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      이메일\n                  </Grid>\n                  <Grid item xs={9}>\n                    {userInfo.mail}\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      서버\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"server\"\n                      label=\"Server\"\n                      id=\"server\"\n                      value={server}\n                      onChange={(e) => (setServer(e.target.value))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      닉네임\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"character\"\n                      label=\"Character\"\n                      id=\"character\"\n                      value={character}\n                      onChange={(e) => (setCharacter(e.target.value))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                     변경 비밀번호\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      label=\"Password\"\n                      id=\"password\"\n                      type=\"password\"\n                      value={changePassword}\n                      onChange={(e) => (setChangePassword(e.target.value))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      변경 비밀번호 확인\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      error={((changePasswordConfirm !== \"\") && (changePassword !== changePasswordConfirm))}\n                      helperText={(changePasswordConfirm !== \"\") && (changePassword !== changePasswordConfirm) ? \"비밀번호가 일치하지 않습니다.\" : \"\"}\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"passwordConfrim\"\n                      label=\"password Confrim\"\n                      id=\"passwordConfrim\"\n                      type=\"password\"\n                      value={changePasswordConfirm}\n                      onChange={(e) => (setChangePasswordConfirm(e.target.value))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12} spacing={3}>\n                  <Grid item xs={6}>\n                    <MyButton\n                      color=\"red\"\n                      text=\"취소\"\n                      onClick={_onCancle}/>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <MyButton\n                      color=\"blue\"\n                      text=\"저장\"\n                      onClick={_onSave}/>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            :\n              <React.Fragment>\n                <Grid container item xs={12}>\n                  <Grid item xs={3}\n                    className={classes.text}>\n                      비밀번호 확인\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      label=\"Password\"\n                      id=\"password\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => (setPassword(e.target.value))}\n                      onKeyUp={(e) => (_onEnterPassword(e.keyCode))}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                  <Grid item xs={12}>\n                    <MyButton\n                      color=\"blue\"\n                      text=\"확인\"\n                      onClick={_onConfirm}/>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            }\n      </Grid>\n    </Container>\n  ); \n}\n\nexport default EditUserInfo;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n/* example\n...\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\n-- Close after 4'sec --\n  setOpenSuccessAlert(true);\n  setTimeout(() => setOpenSuccessAlert(false), 4000);\n-- Component --\n  {\n    openSuccessAlert &&\n      <MyAlert\n        isOpen={true}\n        severity=\"success\"\n        duration={4000}\n        text=\"성공 메세지\" />\n  }\n*/\n\ninterface IProps {\n  isOpen: boolean,\n  severity: \"success\" | \"error\" | \"info\" | \"warning\",\n  text: string,\n  duration: number\n}\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function MyAlert(props: IProps) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.isOpen);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar \n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\"}}\n        open={open} \n        autoHideDuration={props.duration} \n        onClose={handleClose}>\n          <Alert onClose={handleClose} severity={props.severity}>\n            {props.text}\n          </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { checkGameUser } from 'utils/UserUtil';\nimport IUserInfo from 'interfaces/Common/IUserInfo';\n\nimport MyButton from 'elements/Button/MyButton';\nimport MyAlert from 'elements/Alert/MyAlert';\n\ninterface IProps {\n  userInfo: IUserInfo,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    \n  },\n  form: {\n    marginTop: 10,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst duration = 3000;\n\nfunction AuthUserInfo(props: IProps) {\n\n  const classes = useStyles();\n  const userInfo: IUserInfo = props.userInfo;\n\n  const [isDisabled, setIsDisabled] = React.useState(false);\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\n  const [openErrorAlert, setOpenErrorAlert] = React.useState(false);\n\n  const _onAuthRequest = async () => {\n    setIsDisabled(true);\n\n    const res = await checkGameUser(userInfo.server, userInfo.character);\n    \n    if (res) {\n      // Successed Authentication\n      setOpenSuccessAlert(true);\n      setTimeout(() => setOpenSuccessAlert(false), duration);\n      setTimeout(() => document.location.reload(), duration);\n    }\n    else {\n      // Failed Authentication\n      setOpenErrorAlert(true);\n      setTimeout(()=> {\n        setOpenErrorAlert(false);\n        setIsDisabled(false);\n      }, duration);\n    }\n  }\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}>\n          회원인증\n      </Typography>\n      <Grid container spacing={2}\n        className={classes.form}>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            서버\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.server}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            닉네임\n          </Grid>\n          <Grid item xs={9}>\n            {userInfo.character}\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <Grid item xs={3}>\n            인증정보\n          </Grid>\n          <Grid item xs={9}>\n            {\n              userInfo.isAuth \n              ? \"인증\"\n              : \"미인증\"\n            }\n          </Grid>\n        </Grid>\n        <Grid container item xs={12}>\n          <MyButton\n            disabled={isDisabled}\n            color=\"blue\"\n            text={isDisabled ? \"인증 중입니다.\" : \"인증신청\"}\n            onClick={_onAuthRequest}/>\n        </Grid>\n      </Grid>\n      <Backdrop className={classes.backdrop} open={isDisabled}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      {\n        openSuccessAlert &&\n          <MyAlert\n            isOpen={true}\n            severity=\"success\"\n            duration={duration}\n            text=\"인증 성공! 잠시 후 회원정보로 이동 됩니다.\" />\n      }\n      {\n        openErrorAlert &&\n          <MyAlert\n            isOpen={true}\n            severity=\"error\"\n            duration={duration}\n            text=\"인증 실패!\" />\n      }\n    </Container>\n  ); \n}\n\nexport default AuthUserInfo;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\n\nimport { getSignInUserId, getUserInfoById } from 'utils/UserUtil';\n\nimport IUserInfo from 'interfaces/Common/IUserInfo';\n\nimport MyButton from 'elements/Button/MyButton';\nimport NoSignInUser from 'components/User/NoSignInUser';\nimport ViewUserInfo from 'components/User/ViewUserInfo';\nimport EditUserInfo from 'components/User/EditUserInfo';\nimport AuthUserInfo from 'components/User/AuthUserInfo';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 20,\n  },\n  leftSection: {\n  },\n  rightSection: {\n    padding: 10,\n  },\n}));\n\nfunction MyInfo() {\n  const classes = useStyles();\n\n  const userId: string = getSignInUserId();\n  const userInfo: IUserInfo = getUserInfoById(userId);\n\n  const [mode, setMode] = React.useState(\"view\");\n\n  const _onViewUser = () => {\n    setMode(\"view\");\n  }\n\n  const _onEditUser = () => {\n    setMode(\"edit\");\n  }\n\n  const _onAuthUser = () => {\n    setMode(\"auth\");\n  }\n\n  return (\n    <React.Fragment>\n      {\n        userId === \"\" ?\n          <NoSignInUser />\n        :\n        <Container \n          className={classes.root}\n          component=\"main\" \n          maxWidth=\"md\">\n            <Grid container>\n              <Grid item xs={2} className={classes.leftSection}>\n                <MenuList>\n                  <MenuItem onClick={_onViewUser}>회원정보</MenuItem>\n                  <Divider variant=\"middle\"/>\n                  <MenuItem onClick={_onEditUser}>정보수정</MenuItem>\n                  <Divider variant=\"middle\"/>\n                  <MenuItem onClick={_onAuthUser}>회원인증</MenuItem>\n                </MenuList>\n              </Grid>\n              <Divider orientation=\"vertical\" flexItem />\n              <Grid item xs={9} className={classes.rightSection}>\n                {\n                  mode === \"view\" &&\n                    <ViewUserInfo \n                      userInfo={userInfo}/>\n                }\n                {\n                  mode === \"edit\" &&\n                    <EditUserInfo\n                      userInfo={userInfo}/>\n                }\n                {\n                  mode === \"auth\" &&\n                    <AuthUserInfo \n                      userInfo={userInfo}/>\n                }\n              </Grid>\n            </Grid>\n        </Container>\n        \n      }\n    </React.Fragment>\n  )\n}\n\nexport default MyInfo;\n\n\n/*\n<Container \n  className={classes.root}\n  component=\"main\" \n  maxWidth=\"sm\">\n    <Link \n      component=\"button\"\n      variant=\"body2\" \n      tabIndex={-1}\n      onClick={_onChangeEditMode}>\n        정보수정\n    </Link>\n    <form\n      noValidate \n      className={classes.form}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n                disabled\n                variant=\"outlined\"\n                required\n                fullWidth\n                margin=\"dense\"\n                id=\"id\"\n                name=\"id\"\n                label=\"User ID\"\n                autoComplete=\"id\"\n                value={userInfo.id}\n            />\n          </Grid>\n        </Grid>\n        {\n          isEditMode &&\n            <Grid container item xs={12}\n              justify=\"flex-end\"\n              className={classes.edit}>\n                <MyButton\n                  color=\"red\"\n                  text=\"수정\"\n                  onClick={_onEdit}/>\n            </Grid>\n        }\n  </form>\n</Container>\n*/        ","import React from 'react';\nimport './App.css';\n\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\n\nimport Test from './Test';\n\nimport Header from 'components/Header/Header';\nimport Home from 'pages/Home';\nimport SignIn from 'pages/Common/SignIn';\nimport SignUp from 'pages/Common/SignUp';\nimport FindId from 'pages/Common/FindId';\nimport FindPw from 'pages/Common/FindPw';\n\nimport FreeBoard from 'pages/Board/FreeBoard';\nimport PostWrite from 'pages/Board/PostWrite';\n\nimport Item from 'pages/Dictionary/Item';\nimport Raid from 'pages/Dictionary/Raid';\nimport RaidInfo from 'pages/Dictionary/RaidInfo';\n\nimport MyInfo from 'pages/MyPage/MyInfo';\n\nfunction App() {\n  return (\n    <Container\n      maxWidth=\"xl\">\n      <React.Fragment>\n        <header>\n          <Container>\n            <Header/>\n          </Container>\n        </header>\n        <main>\n          <Container\n            fixed>\n            <BrowserRouter>\n              {/*Home*/}\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/test\" component={Test}/>\n\n              {/*Common*/}\n              <Route exact path=\"/signin\" component={SignIn}/>\n              <Route exact path=\"/signup\" component={SignUp}/>\n              <Route exact path=\"/findid\" component={FindId}/>\n              <Route exact path=\"/findpw\" component={FindPw}/>\n\n              {/*Board*/}\n              <Route exact path=\"/board/free\" component={FreeBoard}/>\n              <Route exact path=\"/board/write\" component={PostWrite}/>\n              \n              {/*Dictionary*/}\n              <Route path=\"/dic/item\" component={Item}/>\n              <Route exact path=\"/dic/raid\" component={Raid}/>\n              <Route path=\"/dic/raid/:key\" component={RaidInfo}/>\n\n              {/*MyInfo*/}\n              <Route exact path=\"/myinfo\" component={MyInfo}/>\n            </BrowserRouter>\n          </Container>\n        </main>\n      </React.Fragment>\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <CssBaseline />\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}